{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nconst LS_CHAVE = \"pedidosEmAberto\";\nexport class PaginaInicialFuncionarioService {\n  constructor() {}\n  listarTodosPedidosEmAberto() {\n    const pedidosEmAberto = localStorage[LS_CHAVE];\n    return pedidosEmAberto ? JSON.parse(pedidosEmAberto) : [];\n  }\n  inserirPedidoEmAberto(pedidoEmAberto) {\n    const pedidosEmAberto = this.listarTodosPedidosEmAberto();\n    pedidosEmAberto.push(pedidoEmAberto);\n    localStorage[LS_CHAVE] = JSON.stringify(pedidosEmAberto);\n  }\n  buscarPorPedidoEmAberto(numeroPedido) {\n    const pedidosEmAberto = this.listarTodosPedidosEmAberto();\n    return pedidosEmAberto.find(pedidoEmAberto => pedidoEmAberto.numeroPedido === numeroPedido);\n  }\n  atualizarPedidoEmAberto(pedidoEmAberto) {\n    const pedidosEmAberto = this.listarTodosPedidosEmAberto();\n    pedidosEmAberto.forEach((obj, index, objs) => {\n      if (pedidoEmAberto.numeroPedido === obj.numeroPedido) {\n        objs[index] = pedidoEmAberto;\n      }\n    });\n    localStorage[LS_CHAVE] = JSON.stringify(pedidosEmAberto);\n  }\n  removerPedidoEmAberto(numeroPedido) {\n    let pedidosEmAberto = this.listarTodosPedidosEmAberto();\n    pedidosEmAberto = pedidosEmAberto.filter(pedidosEmAberto => pedidosEmAberto.numeroPedido !== numeroPedido);\n    localStorage[LS_CHAVE] = JSON.stringify(pedidosEmAberto);\n  }\n}\n_class = PaginaInicialFuncionarioService;\n_class.ɵfac = function PaginaInicialFuncionarioService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["LS_CHAVE","PaginaInicialFuncionarioService","constructor","listarTodosPedidosEmAberto","pedidosEmAberto","localStorage","JSON","parse","inserirPedidoEmAberto","pedidoEmAberto","push","stringify","buscarPorPedidoEmAberto","numeroPedido","find","atualizarPedidoEmAberto","forEach","obj","index","objs","removerPedidoEmAberto","filter","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Alexandre\\Documents\\UFPR\\2023_02\\DS140_WEB2\\ProjetoWEB\\lol\\lavanderia-online\\src\\app\\pagina-inicial-funcionario\\services\\pagina-inicial-funcionario.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { PedidosEmAberto } from 'src/app/shared/models/pedidos-em-aberto.model';\r\n\r\nconst LS_CHAVE: string = \"pedidosEmAberto\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class PaginaInicialFuncionarioService {\r\n\r\n  constructor() { }\r\n\r\n  listarTodosPedidosEmAberto(): PedidosEmAberto[] {\r\n    const pedidosEmAberto = localStorage[LS_CHAVE];\r\n\r\n    return pedidosEmAberto ? JSON.parse(pedidosEmAberto) : [];\r\n  }\r\n\r\n  inserirPedidoEmAberto(pedidoEmAberto: PedidosEmAberto): void {\r\n    const pedidosEmAberto = this.listarTodosPedidosEmAberto();\r\n\r\n    pedidosEmAberto.push(pedidoEmAberto);\r\n\r\n    localStorage[LS_CHAVE] = JSON.stringify(pedidosEmAberto);\r\n  }\r\n\r\n  buscarPorPedidoEmAberto(numeroPedido: number): PedidosEmAberto | undefined {\r\n    const pedidosEmAberto: PedidosEmAberto[] = this.listarTodosPedidosEmAberto();\r\n\r\n    return pedidosEmAberto.find(pedidoEmAberto => pedidoEmAberto.numeroPedido === numeroPedido );\r\n  }\r\n\r\n  atualizarPedidoEmAberto(pedidoEmAberto: PedidosEmAberto): void {\r\n    const pedidosEmAberto: PedidosEmAberto[] = this.listarTodosPedidosEmAberto();\r\n\r\n    pedidosEmAberto.forEach( (obj, index, objs) => {\r\n      if (pedidoEmAberto.numeroPedido === obj.numeroPedido) {\r\n        objs[index] = pedidoEmAberto\r\n      }\r\n    });\r\n\r\n    localStorage[LS_CHAVE] = JSON.stringify(pedidosEmAberto);\r\n  }\r\n\r\n  removerPedidoEmAberto(numeroPedido: number): void {\r\n    let pedidosEmAberto: PedidosEmAberto[] = this.listarTodosPedidosEmAberto();\r\n\r\n    pedidosEmAberto = pedidosEmAberto.filter(pedidosEmAberto => pedidosEmAberto.numeroPedido !== numeroPedido);\r\n\r\n    localStorage[LS_CHAVE] = JSON.stringify(pedidosEmAberto);\r\n  }\r\n\r\n}\r\n"],"mappings":";;AAIA,MAAMA,QAAQ,GAAW,iBAAiB;AAM1C,OAAM,MAAOC,+BAA+B;EAE1CC,YAAA,GAAgB;EAEhBC,0BAA0BA,CAAA;IACxB,MAAMC,eAAe,GAAGC,YAAY,CAACL,QAAQ,CAAC;IAE9C,OAAOI,eAAe,GAAGE,IAAI,CAACC,KAAK,CAACH,eAAe,CAAC,GAAG,EAAE;EAC3D;EAEAI,qBAAqBA,CAACC,cAA+B;IACnD,MAAML,eAAe,GAAG,IAAI,CAACD,0BAA0B,EAAE;IAEzDC,eAAe,CAACM,IAAI,CAACD,cAAc,CAAC;IAEpCJ,YAAY,CAACL,QAAQ,CAAC,GAAGM,IAAI,CAACK,SAAS,CAACP,eAAe,CAAC;EAC1D;EAEAQ,uBAAuBA,CAACC,YAAoB;IAC1C,MAAMT,eAAe,GAAsB,IAAI,CAACD,0BAA0B,EAAE;IAE5E,OAAOC,eAAe,CAACU,IAAI,CAACL,cAAc,IAAIA,cAAc,CAACI,YAAY,KAAKA,YAAY,CAAE;EAC9F;EAEAE,uBAAuBA,CAACN,cAA+B;IACrD,MAAML,eAAe,GAAsB,IAAI,CAACD,0BAA0B,EAAE;IAE5EC,eAAe,CAACY,OAAO,CAAE,CAACC,GAAG,EAAEC,KAAK,EAAEC,IAAI,KAAI;MAC5C,IAAIV,cAAc,CAACI,YAAY,KAAKI,GAAG,CAACJ,YAAY,EAAE;QACpDM,IAAI,CAACD,KAAK,CAAC,GAAGT,cAAc;;IAEhC,CAAC,CAAC;IAEFJ,YAAY,CAACL,QAAQ,CAAC,GAAGM,IAAI,CAACK,SAAS,CAACP,eAAe,CAAC;EAC1D;EAEAgB,qBAAqBA,CAACP,YAAoB;IACxC,IAAIT,eAAe,GAAsB,IAAI,CAACD,0BAA0B,EAAE;IAE1EC,eAAe,GAAGA,eAAe,CAACiB,MAAM,CAACjB,eAAe,IAAIA,eAAe,CAACS,YAAY,KAAKA,YAAY,CAAC;IAE1GR,YAAY,CAACL,QAAQ,CAAC,GAAGM,IAAI,CAACK,SAAS,CAACP,eAAe,CAAC;EAC1D;;SA1CWH,+BAA+B;;mBAA/BA,MAA+B;AAAA;;SAA/BA,MAA+B;EAAAqB,OAAA,EAA/BrB,MAA+B,CAAAsB,IAAA;EAAAC,UAAA,EAH9B;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}