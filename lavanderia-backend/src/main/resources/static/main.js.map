{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.module.ts","./src/app/auth/index.ts","./src/app/auth/login.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/services/login.service.ts","./src/app/autocadastro/autocadastro.module.ts","./src/app/autocadastro/autocadastro/autocadastro.component.ts","./src/app/autocadastro/autocadastro/autocadastro.component.html","./src/app/autocadastro/index.ts","./src/app/autocadastro/services/autoCadastro.service.ts","./src/app/consulta-pedido/consulta-pedido.module.ts","./src/app/consulta-pedido/consulta-pedido/consulta-pedido.component.ts","./src/app/consulta-pedido/consulta-pedido/consulta-pedido.component.html","./src/app/consulta-pedido/index.ts","./src/app/consulta-pedido/services/consulta-pedido.service.ts","./src/app/crud-roupas/crud-roupas.module.ts","./src/app/crud-roupas/editar-roupa/editar-roupa.component.ts","./src/app/crud-roupas/editar-roupa/editar-roupa.component.html","./src/app/crud-roupas/index.ts","./src/app/crud-roupas/inserir-roupa/inserir-roupa.component.ts","./src/app/crud-roupas/inserir-roupa/inserir-roupa.component.html","./src/app/crud-roupas/listar-roupas/listar-roupas.component.ts","./src/app/crud-roupas/listar-roupas/listar-roupas.component.html","./src/app/crud-roupas/services/crud-roupas.service.ts","./src/app/environment/environment.ts","./src/app/funcionario/editar-funcionario/editar-funcionario.component.ts","./src/app/funcionario/editar-funcionario/editar-funcionario.component.html","./src/app/funcionario/funcionario.module.ts","./src/app/funcionario/index.ts","./src/app/funcionario/inserir-funcionario/inserir-funcionario.component.ts","./src/app/funcionario/inserir-funcionario/inserir-funcionario.component.html","./src/app/funcionario/listar-funcionario/listar-funcionario.component.ts","./src/app/funcionario/listar-funcionario/listar-funcionario.component.html","./src/app/funcionario/services/funcionario.service.ts","./src/app/listagemF/index.ts","./src/app/listagemF/listagemF.module.ts","./src/app/listagemF/listagemF/listagemF.component.ts","./src/app/listagemF/listagemF/listagemF.component.html","./src/app/listagem/index.ts","./src/app/listagem/listagem.module.ts","./src/app/listagem/listagem/listagem.component.ts","./src/app/listagem/listagem/listagem.component.html","./src/app/orcamento/index.ts","./src/app/orcamento/orcamento.module.ts","./src/app/orcamento/orcamento/orcamento.component.ts","./src/app/orcamento/orcamento/orcamento.component.html","./src/app/orcamento/services/orcamento.service.ts","./src/app/pagamento/index.ts","./src/app/pagamento/pagamento.module.ts","./src/app/pagamento/pagamento/pagamento.component.ts","./src/app/pagamento/pagamento/pagamento.component.html","./src/app/pagamento/service/pagamento.service.ts","./src/app/pagina-inicial-funcionario/index.ts","./src/app/pagina-inicial-funcionario/listar-pedidos-abertos/listar-pedidos-abertos.component.ts","./src/app/pagina-inicial-funcionario/listar-pedidos-abertos/listar-pedidos-abertos.component.html","./src/app/pagina-inicial-funcionario/pagina-inicial-funcionario.module.ts","./src/app/pagina-inicial-funcionario/services/pagina-inicial-funcionario.service.ts","./src/app/pagina-inicial/index.ts","./src/app/pagina-inicial/pagina-inicial.module.ts","./src/app/pagina-inicial/pagina-inicial/pagina-inicial.component.ts","./src/app/pagina-inicial/pagina-inicial/pagina-inicial.component.html","./src/app/pagina-inicial/services/pagina-inicial.service.ts","./src/app/pedido/categoria/categoria.component.ts","./src/app/pedido/categoria/categoria.component.html","./src/app/pedido/header/header.component.ts","./src/app/pedido/header/header.component.html","./src/app/pedido/index.ts","./src/app/pedido/modal-pedido/modal-pedido.component.ts","./src/app/pedido/modal-pedido/modal-pedido.component.html","./src/app/pedido/pedido.module.ts","./src/app/pedido/pedido/pedido.component.ts","./src/app/pedido/pedido/pedido.component.html","./src/app/pedido/services/pedido.service.ts","./src/app/prototipos/rf012/rf012.component.ts","./src/app/prototipos/rf012/rf012.component.html","./src/app/relatorios/index.ts","./src/app/relatorios/relatorios.module.ts","./src/app/relatorios/relatorios/relatorios.component.ts","./src/app/relatorios/relatorios/relatorios.component.html","./src/app/relatorios/service/relatorios.service.ts","./src/app/services/requestService.ts","./src/app/shared/directives/index.ts","./src/app/shared/directives/minimo-validator.directive.ts","./src/app/shared/directives/numerico.directive.ts","./src/app/shared/directives/obrigatorio.directive.ts","./src/app/shared/directives/string-only.directive.ts","./src/app/shared/index.ts","./src/app/shared/models/cadastro.model.ts","./src/app/shared/models/endereco.model.ts","./src/app/shared/models/erro.model.ts","./src/app/shared/models/formulario-data.model.ts","./src/app/shared/models/funcionario.model.ts","./src/app/shared/models/index.ts","./src/app/shared/models/login.model.ts","./src/app/shared/models/pedido.model.ts","./src/app/shared/models/roupa-dto.model.ts","./src/app/shared/models/roupa.model.ts","./src/app/shared/models/user-dto.model.ts","./src/app/shared/models/usuario.model.ts","./src/app/shared/pipes/format.ts","./src/app/shared/shared.module.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { ListagemComponent } from './listagem/listagem';\r\nimport { AutocadastroComponent } from './autocadastro';\r\nimport { ConsultaPedidoComponent } from './consulta-pedido';\r\nimport { LoginComponent } from './auth';\r\nimport { OrcamentoComponent } from './orcamento';\r\nimport { PagamentoComponent } from './pagamento';\r\nimport { PaginaInicialComponent } from './pagina-inicial';\r\nimport { ListarPedidosAbertosComponent } from './pagina-inicial-funcionario';\r\nimport { PedidoComponent } from './pedido';\r\nimport { ListarRoupasComponent } from './crud-roupas/listar-roupas';\r\nimport { InserirRoupaComponent } from './crud-roupas/inserir-roupa';\r\nimport { EditarRoupaComponent } from './crud-roupas/editar-roupa';\r\nimport { Rf012Component } from './prototipos/rf012/rf012.component';\r\nimport { ListagemFComponent } from './listagemF';\r\nimport { EditarFuncionarioComponent, InserirFuncionarioComponent, ListarFuncionarioComponent } from './funcionario';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { RelatoriosComponent } from './relatorios';\r\n\r\nexport const routes: Routes = [\r\n\r\n  { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent, },\r\n  { path: 'autocadastro', component: AutocadastroComponent },\r\n\r\n  { path: 'home', component: PaginaInicialComponent, canActivate: [AuthGuard], data: { role: \"admin,funcionario,cliente\" } },\r\n  { path: 'home-funcionario', component: ListarPedidosAbertosComponent, canActivate: [AuthGuard], data: { role: \"admin,funcionario\" } },\r\n\r\n  { path: 'consulta-pedido', component: ConsultaPedidoComponent, canActivate: [AuthGuard], data: { role: \"admin,cliente\" } },\r\n  { path: 'orcamento', component: OrcamentoComponent, canActivate: [AuthGuard], data: { role: \"admin,funcionario,cliente\" } },\r\n  { path: 'seus-pedidos', component: ListagemComponent, canActivate: [AuthGuard], data: { role: \"admin,funcionario,cliente\" } },\r\n  { path: 'pagamento/:id', component: PagamentoComponent, data: { role: \"admin,funcionario,cliente\" } },\r\n  { path: 'realizar-pedido', component: PedidoComponent, data: { role: \"admin,funcionario,cliente\" } },\r\n\r\n  { path: 'roupas', redirectTo: 'roupas/listar' },\r\n  { path: 'roupas/listar', component: ListarRoupasComponent, canActivate: [AuthGuard], data: { role: \"admin,funcionario\" } },\r\n  { path: 'roupas/novo', component: InserirRoupaComponent, canActivate: [AuthGuard], data: { role: \"admin,funcionario,\" } },\r\n  { path: 'roupas/editar/:id', component: EditarRoupaComponent, canActivate: [AuthGuard], data: { role: \"admin,funcionario\" } },\r\n\r\n  { path: 'funcionario', redirectTo: 'funcionario/listar' },\r\n  { path: 'funcionario/listar', component: ListarFuncionarioComponent, canActivate: [AuthGuard], data: { role: \"admin,funcionario\" } },\r\n  { path: 'funcionario/inserir', component: InserirFuncionarioComponent, canActivate: [AuthGuard], data: { role: \"admin,funcionario\" } },\r\n  { path: 'funcionario/editar/:cpf', component: EditarFuncionarioComponent, canActivate: [AuthGuard], data: { role: \"admin,funcionario\" } },\r\n  //funcionario/inserir-funcionario\r\n  { path: 'prop', redirectTo: 'prototipos/rf012' },\r\n  { path: 'prototipos/rf012', component: Rf012Component },\r\n  { path: 'visualizacao', component: ListagemFComponent, canActivate: [AuthGuard], data: { role: \"admin,funcionario\" } },\r\n  { path: 'relatorios', component: RelatoriosComponent, canActivate: [AuthGuard], data: { role: \"admin,funcionario\" } }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, ChangeDetectorRef, OnChanges, SimpleChanges, AfterViewInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from './auth';\r\nimport { Usuario } from './shared/models';\r\nimport { timeout } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\n\r\nexport class AppComponent implements OnInit {\r\n  isChecked: boolean = false;\r\n  user!: Usuario | null;\r\n  sh: any;\r\n  title = 'lavanderia-online';\r\n  constructor(public router: Router, public loginService: LoginService, private ref: ChangeDetectorRef) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    console.log(\"hi\");\r\n    this.user = this.loginService.getUsuario();\r\n  }\r\n\r\n  logout() {\r\n    this.loginService.logout();\r\n  }\r\n\r\n  isLogged() {\r\n    return this.loginService.checkIfLogged();\r\n  }\r\n\r\n  refresh(): void {\r\n    window.location.reload();\r\n  }\r\n\r\n}\r\n\r\nexport class AppModule { }\r\n\r\n\r\n\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>LOL</title>\r\n</head>\r\n\r\n<body>\r\n    <nav *ngIf=\"loginService.usuarioLogado()\" class=\"navbar navbar-expand-md n mb-3\"\r\n        style=\"border-bottom: 1px; box-shadow: 0 0 10px 1px #5a57ff;\">\r\n\r\n        <a class=\"navbar-brand\" href=\"#\" routerLink=\"/home\"><img src=\"../assets/logoLol.png\" width=\"100\" alt=\"Logo\"\r\n                style=\"margin-right: 7px; padding-left: 20px;\"></a>\r\n\r\n        <div class=\"navbar-collapse collapsed justify-content-between\" id=\"navbarContent\">\r\n            <ul class=\"navbar-nav ml-auto\">\r\n                <!--\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"#\" routerLink=\"/home\">Página Inicial</a>\r\n                </li>\r\n\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"#\" routerLink=\"/autocadastro\">Cadastro</a>\r\n                </li>\r\n                -->\r\n                <li *ngIf=\"user == null \">\r\n                    <a class=\"nav-link\" href=\"#\">Entrar</a>\r\n                </li>\r\n\r\n                <li *ngIf=\"user?.perfil==='admin' || user?.perfil==='funcionario'\" ng-bind=\"user\" class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"#\" routerLink=\"/home-funcionario\">Página Inicial</a>\r\n                </li>\r\n\r\n                <li *ngIf=\"user?.perfil==='admin' || user?.perfil==='cliente'\" class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"#\" routerLink=\"/consulta-pedido\">Consultar Pedidos</a>\r\n                </li>\r\n\r\n                <li *ngIf=\"user?.perfil==='admin' || user?.perfil==='cliente'\" class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"#\" routerLink=\"/realizar-pedido\">Realizar Pedido</a>\r\n                </li>\r\n\r\n                <li *ngIf=\"user?.perfil==='admin' || user?.perfil==='cliente'\" class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"#\" routerLink=\"/orcamento\">Orçamentos</a>\r\n                </li>\r\n\r\n                <li *ngIf=\"user?.perfil==='admin' || user?.perfil==='cliente'\" class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"#\" routerLink=\"/seus-pedidos\">Seus Pedidos</a>\r\n                </li>\r\n                <!--\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" href=\"#\" routerLink=\"/pagamento\">Pagamento</a>\r\n                    </li>\r\n                -->\r\n                <li *ngIf=\"user?.perfil==='admin' || user?.perfil==='funcionario'\" class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"#\" routerLink=\"/visualizacao\">Visualização de Pedidos</a>\r\n                </li>\r\n\r\n                <li *ngIf=\"user?.perfil==='admin' || user?.perfil==='funcionario'\" class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"#\" routerLink=\"/roupas\">Roupas</a>\r\n                </li>\r\n\r\n                <li *ngIf=\"user?.perfil==='admin' || user?.perfil==='funcionario'\" class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"#\" routerLink=\"/funcionario\">Lista de Funcionarios</a>\r\n                </li>\r\n\r\n                <li *ngIf=\"user?.perfil==='admin' || user?.perfil==='funcionario'\" class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"#\" routerLink=\"/relatorios\">Relatórios</a>\r\n                </li>\r\n                <!--\r\n                    <li *ngIf=\"user?.perfil==='admin' || user?.perfil==='funcionario'\" class=\"nav-item\">\r\n                        <a class=\"nav-link\" href=\"/api/index\">Api</a>\r\n                    </li>\r\n                -->\r\n            </ul>\r\n            <ul *ngIf=\"loginService.getUsuario()\" class=\"navbar-nav ml-auto px-2 mx-2\">\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"#\" (click)=\"logout()\">Logout</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <p class=\"navbar-text mb-0 px-2 mx-2\" style=\"color: #5a57ff;\">\r\n                        <i class=\"fa fa-user\"> </i> {{ user?.nome| uppercase}}\r\n                    </p>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n    <router-outlet></router-outlet>\r\n</body>\r\n<script>\r\n\r\n</script>\r\n\r\n</html>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AutocadastroModule } from './autocadastro';\r\nimport { ConsultaPedidoModule } from './consulta-pedido';\r\nimport { OrcamentoModule } from './orcamento';\r\nimport { PagamentoModule } from './pagamento';\r\nimport { PaginaInicialModule } from './pagina-inicial';\r\nimport { PedidoModule } from './pedido';\r\nimport { CrudRoupasModule } from './crud-roupas';\r\nimport { ListagemModule } from './listagem';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FuncionarioModule } from './funcionario';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgxMaskDirective, NgxMaskPipe, provideNgxMask } from 'ngx-mask';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { RelatoriosModule } from './relatorios';\r\n/* Aonde está escrito o nome do componente no import é para substituir com o nome do componente que vc criou \r\n  Exemplo: Se vc criou o componente esta com o login é para substituir o \"LoginComponent\" pelo nome do componente que vc criou. \r\n*/\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n    AppRoutingModule,\r\n    AuthModule,\r\n    AutocadastroModule,\r\n    ConsultaPedidoModule,\r\n    OrcamentoModule,\r\n    PagamentoModule,\r\n    PaginaInicialModule,\r\n    PedidoModule,\r\n    PedidoModule,\r\n    CrudRoupasModule,\r\n    ListagemModule,\r\n    FormsModule,\r\n    FuncionarioModule,\r\n    RelatoriosModule,\r\n    NgxMaskDirective,\r\n    NgxMaskPipe\r\n  ],\r\n\r\n  providers: [provideNgxMask()],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from './services/login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> |\r\n    Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n    const usuarioLogado = this.loginService.getUsuario();\r\n    //const usuarioLogado = this.loginService.usuarioLogado;\r\n    let url = state.url;\r\n    //console.log(usuarioLogado);\r\n    if (usuarioLogado) {\r\n      if (route.data?.['role'] && route.data?.['role'].indexOf(usuarioLogado.perfil) === -1) {\r\n        // Se o perfil do usuário não está no perfil da rota\r\n        // vai para login\r\n        this.router.navigate(['/login'],\r\n          { queryParams: { error: \"Proibido o acesso a \" + url } });\r\n        return false;\r\n      }\r\n      // em qualquer outro caso, permite o acesso\r\n      return true;\r\n    }\r\n    // Se não está logado, vai para login\r\n\r\n    this.router.navigate(['/login'],\r\n      {\r\n        state: {\r\n          \"mensagem\": \"Usuario precisa estar logado\",\r\n        }\r\n      });\r\n    return false;\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","export * from './login.module';\r\nexport * from './login';\r\nexport * from './services';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LoginService } from './services/login.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    //LoginComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  exports: [\r\n    //LoginComponent\r\n  ],\r\n  providers: [\r\n    LoginService\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { LoginService } from '../services';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Login } from 'src/app/shared/models/login.model';\r\nimport { AppComponent } from 'src/app/app.component';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  erro = false\r\n  mensagem = \"Usuário ou senha incorretos!\";\r\n  usuario?: string\r\n  senha?: string\r\n  login?: Login\r\n\r\n  constructor(private loginService: LoginService, private router: Router, private app: AppComponent) {\r\n    let value = this.router.getCurrentNavigation()?.extras.state;\r\n    if (value != undefined) {\r\n      this.erro = true;\r\n      this.mensagem = value[\"mensagem\"];\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loginService.checkIfLogged();\r\n  }\r\n\r\n  pegarDadosFormulario(formulario: NgForm) {\r\n    if (formulario.form.valid) {\r\n      let dados = formulario.value;\r\n      let login: Login = new Login(dados.username, dados.password);\r\n      this.loginService.login(login, this, this.app);\r\n\r\n    } else {\r\n      this.erro = true;\r\n    }\r\n  }\r\n\r\n  setErro(valor: boolean) {\r\n    this.erro = valor;\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Login</title>\r\n    <!-- Adicione os links para os arquivos CSS e JavaScript do Bootstrap -->\r\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.5.0/dist/css/bootstrap.min.css\">\r\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.5.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n</head>\r\n\r\n<body>\r\n    <div class=\"container\" id=\"container\">\r\n        <div class=\"row justify-content-center align-items-center\">\r\n            <div class=\"col-md-4\">\r\n                <div class=\"card border-2\" id=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <!-- <div class=\"d-flex justify-content-center mt-4\"> -->\r\n                        <div class=\"mt-4 text-center\">\r\n                            <img src=\"../../assets/logoLol.png\" alt=\"Logo\" aria-hidden=\"true\" width=\"200\">\r\n                        </div>\r\n                        <form #formulario=\"ngForm\" (ngSubmit)=\"pegarDadosFormulario(formulario)\" class=\"mx-3 mt-3\">\r\n                            <div *ngIf=\"erro\" class=\"alert alert-danger\">{{mensagem}}</div>\r\n                            <div>\r\n                                <label for=\"username\" class=\"form-label\">Usuário:</label>\r\n                                <input ngModel type=\"text\" class=\"form-control inputlol text-left\" id=\"username\"\r\n                                    #username=\"ngModel\" name=\"username\" (focus)=\"setErro(false)\" required>\r\n                            </div>\r\n                            <div *ngIf=\"username.errors && (username.dirty || username.touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div [hidden]=\"!username.errors['required']\">\r\n                                    Digite o usuário.\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label for=\" password\" class=\"form-label mt-3\">Senha:</label>\r\n                                <input ngModel type=\"password\" class=\"form-control  inputlol\" id=\"password\"\r\n                                    #password=\"ngModel\" name=\"password\" (focus)=\"setErro(false)\" required>\r\n\r\n                            </div>\r\n                            <div *ngIf=\"password.errors && (password.dirty || password.touched)\"\r\n                                class=\"alert alert-danger\">\r\n                                <div [hidden]=\"!password.errors['required']\">\r\n                                    Digite a senha.\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <!-- <div class=\"d-flex justify-content-center\"> -->\r\n                            <div class=\"mt-3 mb-1 text-center\">\r\n                                <button type=\"submit\" class=\"btn btn-primary btn-lg fs-4\">Login</button>\r\n                            </div>\r\n                            <div class=\"text-center fs-6\">\r\n                                <p class=\"mb-0 mt-2\">Não possui conta? <br>\r\n                                    <a href=\"autocadastro\" class=\"mb-2\" id=\"cadastre-se\">Cadastre-se aqui.</a>\r\n                                </p>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>\r\n\r\n</html>\r\n\r\n\r\n\r\n<!-- \r\n<form #formLogin=\"ngForm\">\r\n    <div class=\"form-group\">\r\n        <label for=\"usuario\">Usuário:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"usuario\" name=\"usuario\" [(ngModel)]=\"login.login\" #usuario=\"ngModel\" required>\r\n        <div *ngIf=\"usuario.errors && (usuario.dirty || usuario.touched)\" class=\"alert alert-danger\">\r\n            <div [hidden]=\"!usuario.errors['required']\">\r\n                Digite o usuário\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"senha\">Senha:</label>\r\n        <input type=\"password\" class=\"form-control\" id=\"senha\" name=\"senha\" [(ngModel)]=\"login.senha\" #senha=\"ngModel\" required>\r\n        <div *ngIf=\"senha.errors && (senha.dirty || senha.touched)\" class=\"alert alert-danger\">\r\n            <div [hidden]=\"!senha.errors['required']\">\r\n                Digite a senha.\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"logar()\" [disabled]=\"!formLogin.form.valid\">\r\n        <i class=\"fa fa-save\" aria-hidden=\"true\"></i> Logar\r\n    </button>\r\n    <a class=\"btn btn-secondary\" [routerLink]=\"['/autocadastro']\">\r\n        <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> Registrar\r\n    </a>\r\n</form> -->","import { Injectable } from '@angular/core';\r\nimport { Usuario } from 'src/app/shared/models/usuario.model';\r\nimport { Login } from 'src/app/shared/models/login.model';\r\nimport { RequestMaker, RequestResult } from 'src/app/services/requestService';\r\nimport { Router } from '@angular/router';\r\nimport { LoginComponent } from '../login';\r\nimport { AppComponent } from 'src/app/app.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  async login(login: Login, loginComponent: LoginComponent, app: AppComponent) {\r\n    login.login = (login.login || '').toLowerCase();\r\n    let response = await RequestMaker.postData<Usuario>(\"/auth/login\", login);\r\n    if (response.ok(response.data)) {\r\n      let usuario = response.data;\r\n      localStorage[\"user\"] = JSON.stringify(usuario);\r\n      this.navigateAfterLogin(response.data);\r\n      console.log(app.ngOnInit());\r\n    } else {\r\n      loginComponent.setErro(true);\r\n    }\r\n  }\r\n\r\n  async checkIfLogged() {\r\n    let usuario = this.procurarNoLocalStorage();\r\n    if (usuario != null) {\r\n      this.navigateAfterLogin(usuario);\r\n      return;\r\n    }\r\n    let response = await RequestMaker.getData<Usuario>(\"/auth/testLogin\"); // axios 1s 2s 10-s\r\n    if (response.ok(response.data)) {\r\n      this.navigateAfterLogin(response.data);\r\n    }\r\n  }\r\n\r\n  usuarioLogado(): boolean {\r\n    if (this.getUsuario() == null) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  getUsuario(): Usuario | null {\r\n    let usuario = this.procurarNoLocalStorage();\r\n    if (usuario != null) {\r\n      return usuario;\r\n    }\r\n    // let response = await RequestMaker.getData<Usuario>(\"/auth/testLogin\");\r\n    ////  if (response.ok(response.data)) {\r\n    //     return response.data;\r\n    //   }\r\n    return null;\r\n  }\r\n\r\n\r\n  private procurarNoLocalStorage(): Usuario | null {\r\n    let LS_CHAVE: string = \"user\";\r\n    let result: string | undefined | null = localStorage[LS_CHAVE];\r\n    if (result != undefined || result != null) {\r\n      let usuario: Usuario = JSON.parse(result);\r\n      return usuario;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private navigateAfterLogin(usuario: Usuario) {\r\n    if (usuario.perfil == \"cliente\") {\r\n      this.router.navigate([\"/seus-pedidos\"]);\r\n    } else {\r\n      this.router.navigate([\"/home-funcionario\"])\r\n    }\r\n  }\r\n\r\n  public logout() {\r\n    localStorage.clear();\r\n    RequestMaker.getData(\"/api/auth/logout\");\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AutocadastroComponent } from './autocadastro/autocadastro.component';\r\nimport { AutoCadastroService } from './services';\r\nimport { NgxMaskDirective, NgxMaskPipe, provideNgxMask } from 'ngx-mask';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AutocadastroComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    NgxMaskDirective,\r\n    NgxMaskPipe\r\n  ],\r\n  exports: [\r\n    AutocadastroComponent\r\n  ],\r\n  providers: [\r\n    AutoCadastroService,\r\n    provideNgxMask()\r\n  ]\r\n})\r\nexport class AutocadastroModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ViewChild } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AutoCadastroService } from '../services';\r\n\r\nimport { RequestMaker } from 'src/app/services/requestService';\r\nimport { NgxMaskDirective } from 'ngx-mask';\r\nimport { Endereco, Cadastro, FormularioData } from 'src/app/shared/models';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-autocadastro',\r\n  templateUrl: './autocadastro.component.html',\r\n  styleUrls: ['./autocadastro.component.css'],\r\n})\r\nexport class AutocadastroComponent implements OnInit {\r\n\r\n  @ViewChild('formPessoa') formPessoa!: NgForm;\r\n  cidade!: any;\r\n  cep!: any;\r\n  complemento!: any;\r\n  endereco!: any;\r\n\r\n  constructor(private autoCadastroService: AutoCadastroService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  async teste() {\r\n    let result = await RequestMaker.getData<String>(\"/auth/teste\");\r\n    if (result.data) {\r\n      console.log(result.data);\r\n    }\r\n  }\r\n\r\n  requestCep() {\r\n    let value = this.cep as string\r\n    value.replace('-', '')\r\n    this.autoCadastroService.getCep(this.cep).then((response) => {\r\n      this.cidade = response.data.localidade;\r\n      this.endereco = response.data.logradouro;\r\n      this.complemento = response.data.complemento;\r\n    })\r\n  }\r\n\r\n  async realizarCadastro(formulario: NgForm) {\r\n    let dados: FormularioData = formulario.value;\r\n    dados = this.autoCadastroService.validadeFormulario(dados);\r\n    this.autoCadastroService.postUser(dados);\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"pt-br\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Autocadastro</title>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.5.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n</head>\r\n\r\n<body>\r\n    <div class=\"container\">\r\n        <div class=\"row justify-content-center mt-5\">\r\n            <div class=\"col-lg-10\">\r\n                <div class=\"card border-2\" id=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <div class=\"mt-4 mx-3 text-center\">\r\n                            <img src=\"../../assets/logoLol.png\" alt=\"Logo\" aria-hidden=\"true\" width=\"200\">\r\n                        </div>\r\n                        <div>\r\n                            <form #formulario=\"ngForm\" class=\"mx-3 mt-3\" (ngSubmit)=\"realizarCadastro(formulario)\">\r\n                                <div class=\"row align-items-start\">\r\n                                    <div class=\"col\">\r\n                                        <div>\r\n                                            <label class=\"form-label mt-2\" for=\"nome\">Nome:</label>\r\n                                            <input type=\"text\" class=\"form-control inputlol text-left\" id=\"nome\"\r\n                                                #nome=\"ngModel\" minlength=\"2\" maxlength=\"60\" name=\"nome\" required\r\n                                                ngModel>\r\n                                            <div *ngIf=\"nome.errors && (nome.dirty || nome.touched)\"\r\n                                                class=\"alert alert-danger\">\r\n                                                <div [hidden]=\"!nome.errors['required']\">Nome completo obrigatório.\r\n                                                </div>\r\n                                                <div [hidden]=\"!nome.errors['minlength']\">O nome deve conter no mínimo 2\r\n                                                    caracteres.</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-6\">\r\n                                                <label class=\"form-label mt-2\" for=\"cpf\">CPF:</label>\r\n                                                <input type=\"text\" class=\"form-control inputlol text-left\" id=\"CPF\"\r\n                                                    pattern=\"(\\d{3}\\.?\\d{3}\\.?\\d{3}-?\\d{2})\" name=\"cpf\"\r\n                                                    title=\"Digite seu CPF\" mask=\"000.000.000-00\" #cpf=\"ngModel\"\r\n                                                    minlength=\"11\" maxlength=\"14\" required ngModel>\r\n                                                <div *ngIf=\"cpf.errors && (cpf.dirty || cpf.touched)\"\r\n                                                    class=\"alert alert-danger\">\r\n                                                    <div [hidden]=\"!cpf.errors['required']\">CPF obrigatório.</div>\r\n                                                    <div [hidden]=\"!cpf.errors['minlength']\">O CPF deve conter no\r\n                                                        mínimo 11 caracteres.</div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <!-- <div class=\"col-sm-6\">\r\n                                                <label class=\"form-label mt-2\" for=\"dataNasc\">Data de Nascimento:</label>\r\n                                                <input type=\"tel\" class=\"form-control inputlol text-left\" id=\"dataNasc\"\r\n                                                    name=\"dataNasc\" #dataNasc=\"ngModel\" numerico ngModel>\r\n                                                <div *ngIf=\"dataNasc.errors && (dataNasc.dirty || dataNasc.touched)\"\r\n                                                    class=\"alert alert-danger\">\r\n                                                    <div [hidden]=\"!dataNasc.errors['required']\">Data de nascimento\r\n                                                        obrigatória.\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div> -->\r\n\r\n                                            <div class=\"col-sm-6\">\r\n                                                <label class=\"form-label mt-2\" for=\"telefone\">Telefone:</label>\r\n                                                <input type=\"tel\" class=\"form-control inputlol text-left\" id=\"telefone\"\r\n                                                    mask=\"(00) 00000-0000\" name=\"telefone\" #contato=\"ngModel\"\r\n                                                    minlength=\"11\" maxlength=\"15\" numerico name=\"telefone\" ngModel>\r\n                                                <div *ngIf=\"contato.errors && (contato.dirty || contato.touched)\"\r\n                                                    class=\"alert alert-danger\">\r\n                                                    <div [hidden]=\"!contato.errors['required']\">Contato obrigatório.\r\n                                                    </div>\r\n                                                    <div [hidden]=\"!contato.errors['minlength']\">Deve conter no\r\n                                                        mínimo 10 caracteres.</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-7\">\r\n                                                <label class=\"form-label mt-2\" for=\"email\">E-mail:</label>\r\n                                                <input type=\"email\" class=\"form-control inputlol text-left\" id=\"email\"\r\n                                                    name=\"email\" required ngModel>\r\n                                            </div>\r\n                                            <div class=\"col-sm-5\">\r\n                                                <label class=\"form-label mt-2\" for=\"dataNasc\">Nascimento:</label>\r\n                                                <input type=\"date\" class=\"form-control inputlol text-left\" id=\"dataNasc\"\r\n                                                    name=\"dataNasc\" required ngModel>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-5 inputCep\">\r\n                                                CEP:\r\n                                                <div class=\"input-group col-sm-5\">\r\n                                                    <button class=\"btn btn-outline-secondary\" (click)=\"requestCep()\"\r\n                                                        type=\"button\" id=\"button-addon1\"><img\r\n                                                            src=\"../../../assets/search.svg\" alt=\"\"></button>\r\n                                                    <input type=\"text\" id=\"cep\" ngModel name=\"cep\" [(ngModel)]=\"cep\"\r\n                                                        mask=\"00000-000\" class=\"form-control inputlol\" placeholder=\"\"\r\n                                                        aria-label=\"Example text with button addon\"\r\n                                                        aria-describedby=\"button-addon1\">\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-sm-7\">\r\n                                                <label class=\"form-label mt-2\" for=\"nome\">Cidade:</label>\r\n                                                <input type=\"text\" class=\"form-control inputlol text-left\" id=\"cidade\"\r\n                                                    required ngModel name=\"cidade\" [(ngModel)]=\"cidade\">\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <label class=\"form-label mt-2\" for=\"nome\">Endereço:</label>\r\n                                            <input type=\"text\" class=\"form-control inputlol text-left\" id=\"endereco\"\r\n                                                required ngModel name=\"endereco\" [(ngModel)]=\"endereco\">\r\n                                        </div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-sm-4\">\r\n                                                <label class=\"form-label mt-2\" for=\"nome\">Número:</label>\r\n\r\n                                                <input type=\"text\" class=\"form-control inputlol text-left\" id=\"numero\"\r\n                                                    required ngModel name=\"numero\">\r\n                                            </div>\r\n                                            <div class=\"col-sm-8\">\r\n                                                <label class=\"form-label mt-2\" for=\"nome\">Complemento:</label>\r\n                                                <input type=\"text\" class=\"form-control inputlol text-left\"\r\n                                                    id=\"complemento\" ngModel name=\"complemento\"\r\n                                                    [(ngModel)]=\"complemento\">\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"mt-3 mb-1 text-center\">\r\n                                        <button type=\"submit\" class=\"btn btn-primary btn-lg fs-4\">Cadastrar</button>\r\n                                    </div>\r\n                                    <div class=\"text-center fs-6\">\r\n                                        <p class=\"mb-0 mt-2\">Já possui conta? <br>\r\n                                            <a href=\"login\" class=\"mb-2\" id=\"logue\">Entre aqui.</a>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>","export * from './autocadastro.module';\r\nexport * from './autocadastro';\r\nexport * from './services'\r\nexport * from './autocadastro/autocadastro.component';","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport axios from 'axios';\r\nimport { RequestMaker } from 'src/app/services/requestService';\r\nimport { Endereco } from 'src/app/shared';\r\nimport { FormularioData } from 'src/app/shared/models/formulario-data.model';\r\nimport { UserDTO } from 'src/app/shared/models/user-dto.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AutoCadastroService {\r\n\r\n  constructor(private router: Router) {\r\n  }\r\n\r\n\r\n\r\n  getCep(cep: string) {\r\n    return axios.get(`https://viacep.com.br/ws/${cep}/json/`, {\r\n      headers: {\r\n        \"Content-Type\": 'application/json'\r\n      }\r\n    })\r\n  }\r\n\r\n  private validateTel(tel: string): string {\r\n    switch (tel.length) {\r\n\r\n    }\r\n    console.log(tel.length);\r\n    return tel;\r\n  }\r\n\r\n  validadeFormulario(dados: FormularioData) {\r\n    this.validateTel(dados.telefone);\r\n    return dados;\r\n  }\r\n\r\n  async postUser(data: FormularioData) {\r\n    console.log(data.dataNasc);\r\n    let endereco = new Endereco(data.cep, data.cidade, data.endereco, data.numero, data.complemento);\r\n    let usuario = new UserDTO(data.nome, data.cpf, data.telefone, data.email, data.dataNasc, endereco);\r\n    let response = await RequestMaker.postData<string>(\"/auth/register\", usuario);\r\n    if (response.ok(response.data)) {\r\n      if (confirm(\"Cliente cadastrado com sucesso!\\nSua senha é \" + response.data)) {\r\n      }\r\n      this.router.navigate([\"/login\"]);\r\n    } else {\r\n      alert(\"Erro ao cadastrar cliente\");\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ConsultaPedidoService } from './services';\r\nimport { ConsultaPedidoComponent } from './consulta-pedido';\r\nimport { NumericoDirective } from '../shared/directives';\r\nimport { Format } from '../shared/pipes/format';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ConsultaPedidoComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    Format\r\n  ],\r\n  exports: [\r\n    ConsultaPedidoComponent\r\n  ],\r\n  providers: [\r\n    ConsultaPedidoService\r\n  ]\r\n})\r\nexport class ConsultaPedidoModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RequestMaker } from 'src/app/services/requestService';\r\nimport { ConsultaPedidoService } from '../services';\r\nimport { Pedido } from '../../shared/models/pedido.model'\r\nimport { Roupa } from 'src/app/shared';\r\nimport { Item } from 'src/app/shared/models/item.model';\r\nimport { Console } from 'console';\r\n\r\n@Component({\r\n  selector: 'app-consulta-pedido',\r\n  templateUrl: './consulta-pedido.component.html',\r\n  styleUrls: ['./consulta-pedido.component.css']\r\n})\r\nexport class ConsultaPedidoComponent implements OnInit {\r\n\r\n  pedido!: Pedido;\r\n  roupas!: Item[];\r\n  vazio: number = 0;\r\n\r\n  constructor(private consultaPedidoService: ConsultaPedidoService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  async buscarPorPedido(numero: string): Promise<void> {\r\n    let response = await RequestMaker.getData<Pedido>(`/usuario/get/pedido?numeroPedido=${numero}`);\r\n    if (response.ok(response.data)) {\r\n      this.pedido = response.data;\r\n      if (this.pedido.roupas) {\r\n        this.roupas = this.pedido.roupas;\r\n      }\r\n      console.log(this.roupas);\r\n      this.vazio = 1;\r\n    }\r\n    else {\r\n      this.vazio = 2;\r\n    }\r\n  }\r\n\r\n  getRoupas(): Item[] | undefined {\r\n    if (this.pedido != undefined) {\r\n      if (this.pedido.roupas != undefined) {\r\n        this.roupas = this.pedido.roupas;\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  /*   async ngOnInit(): Promise<void> {\r\n\r\n    let id = this.route.snapshot.params['id'];\r\n    let response = await RequestMaker.getData<Pedido>(`/usuario/get/pedido&numeroPedido=${id}`);\r\n    if (response.ok(response.data)) {\r\n      this.pedido = response.data;\r\n    }\r\n    console.log(response);\r\n  }\r\n  */\r\n\r\n}\r\n","<h1>Consultar Pedido</h1>\r\n\r\n<div class=\"container\">\r\n    <form>\r\n        <div class=\"form-group row mb-3\">\r\n            <label for=\"numeroPedido\" class=\"col-sm-3 col-form-label\">Informe o número do pedido:</label>\r\n            <div class=\"col-sm-2\">\r\n                <input id=\"numeroPedido\" class=\"form-control inputlol\" placeholder=\"Número do pedido\" #numeroPedido\r\n                    type=\"text\" numerico />\r\n            </div>\r\n            <button type=\"button\" title=\"Pesquisar\" alt=\"Pesquisar\" class=\"col-sm-2 btn btn-primary\"\r\n                (click)=\"buscarPorPedido(numeroPedido.value)\">\r\n                <i class=\"fa fa-search\" aria-hidden=\"true\"></i> Pesquisar\r\n            </button>\r\n        </div>\r\n    </form>\r\n    <p *ngIf=\"vazio == 2\">Pedido não encontrado</p>\r\n</div>\r\n\r\n<div class=\"container mt-4\" *ngIf=\"vazio == 1\">\r\n    <div class=\"card\">\r\n        <div class=\"card-header\">\r\n            <h5 class=\"card-title\">Detalhes do Pedido</h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <p><strong>Número do Pedido:</strong> {{pedido.numero}}</p>\r\n                    <p><strong>Data do Pedido:</strong> {{pedido.data! | format}}</p>\r\n                    <p><strong>Prazo de Entrega:</strong> {{pedido.prazo! | format}}</p>\r\n                    <p><strong>Valor Total:</strong>R$ {{pedido.total}}</p>\r\n                    <p><strong>Situação do Pedido:</strong> {{pedido.status}}</p>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"itensDropdown\">Itens do Pedido:</label>\r\n                        <div class=\"d-flex flex-wrap\">\r\n                            <div class=\"m-1\">\r\n                                <table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Nome</th>\r\n                                            <th></th>\r\n                                            <th>Qtd.</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let roupa of roupas\">\r\n                                            <td>{{ roupa.descricao }}</td>\r\n                                            <td>x</td>\r\n                                            <td>{{ roupa.quantidade }}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <a class='btn btn-dark' [routerLink]=\"['/seus-pedidos']\">Voltar</a>\r\n</div>\r\n\r\n\r\n<!-- \r\n<div class=\"container\">\r\n\r\n    <table class=\"table table-striped table-bordered table-hover\">\r\n        <tbody>\r\n            <tr>\r\n                <th class=\"col-2\">QUANTIDADE</th>\r\n                <th scope=\"col-4\">ITEM</th>\r\n                <th scope=\"col-2\">PREÇO UNITÁRIO</th>\r\n                \r\n                    <th class=\"text-center\">\r\n                        <a href=\"#\" title=\"Recolhido\" alt=\"Recolhido\" class=\"btn btn-xs btn-success\">\r\n                            <i class=\"fa fa-plus\" aria-hidden=\"true\"></i> Recolhindo\r\n                        </a>\r\n                    </th>\r\n                \r\n            </tr>\r\n\r\n            <tr *ngFor=\"let pedido of pedidos\">\r\n                 <td class=\"col-2\">{{pedido.quantidade}}</td>\r\n                <td class=\"col-4\">{{pedido.item}}</td>\r\n                <td class=\"col-2\">{{pedido.valor}}</td>\r\n                \r\n            </tr>\r\n\r\n        </tbody>\r\n    </table>\r\n\r\n    <form>\r\n        <div *ngIf=\"pedidos.length !=0\" class=\"form-group row\">\r\n            <div class=\"row-sm-4\">\r\n                <label class=\"col-sm-2 col-form-label\"> <strong>PRAZO PARA ENTREGA:</strong></label>\r\n                <label class=\"col-sm-2 col-form-label\">AQUI DATA</label>\r\n            </div>\r\n            <div class=\"row-sm-4\">\r\n                <label class=\"col-sm-2 col-form-label\"><strong>TOTAL:</strong></label>\r\n                <label class=\"col-sm-2 col-form-label\">AQUI TOTAL</label>\r\n            </div>\r\n        </div>\r\n        <p *ngIf=\"pedidos.length == 0\">Nenhum pedido encontrado</p>\r\n    </form>\r\n    \r\n        \r\n    <table class=\"table table-striped table-bordered table-hover\">\r\n        <tbody>\r\n            <tr>\r\n                <th>PRAZO PARA ENTREGA</th>\r\n                <th>AQUI DATA</th>\r\n                <th>TOTAL</th>\r\n                <th>AQUI VALOR</th>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n\r\n\r\n</div> -->","export * from './consulta-pedido.module';\r\nexport * from './consulta-pedido';\r\nexport * from './services'","import { Injectable } from '@angular/core';\r\n\r\nimport { Pedido } from 'src/app/shared/models/pedido.model';\r\n\r\nconst LS_CHAVE: string = \"pedidos\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConsultaPedidoService {\r\n\r\n  constructor() { }\r\n\r\n  listarTodosPedidos(): Pedido[] {\r\n    const pedidos = localStorage[LS_CHAVE];\r\n\r\n    return pedidos ? JSON.parse(pedidos) : [];\r\n  }\r\n\r\n  inserirPedido(pedido: Pedido): void {\r\n    const pedidos = this.listarTodosPedidos();\r\n\r\n    pedidos.push(pedido);\r\n\r\n    localStorage[LS_CHAVE] = JSON.stringify(pedidos);\r\n  }\r\n\r\n  buscarPorPedido(numeroPedido: number): Pedido | undefined {\r\n    const pedidos: Pedido[] = this.listarTodosPedidos();\r\n\r\n    return pedidos.find(pedido => pedido.numero === numeroPedido);\r\n  }\r\n\r\n  atualizarPedido(pedido: Pedido): void {\r\n    const pedidos: Pedido[] = this.listarTodosPedidos();\r\n\r\n    pedidos.forEach((obj, index, objs) => {\r\n      if (pedido.numero === obj.numero) {\r\n        objs[index] = pedido\r\n      }\r\n    });\r\n\r\n    localStorage[LS_CHAVE] = JSON.stringify(pedidos);\r\n  }\r\n\r\n  removerPedido(numeroPedido: number): void {\r\n    let pedidos: Pedido[] = this.listarTodosPedidos();\r\n\r\n    pedidos = pedidos.filter(pedido => pedido.numero !== numeroPedido);\r\n\r\n    localStorage[LS_CHAVE] = JSON.stringify(pedidos);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../shared';\r\n\r\nimport { CrudRoupasService } from './services';\r\nimport { ListarRoupasComponent } from './listar-roupas';\r\nimport { InserirRoupaComponent } from './inserir-roupa';\r\nimport { EditarRoupaComponent } from './editar-roupa';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ListarRoupasComponent,\r\n    InserirRoupaComponent,\r\n    EditarRoupaComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    SharedModule\r\n  ],\r\n  providers: [\r\n    CrudRoupasService\r\n  ]\r\n})\r\nexport class CrudRoupasModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Roupa } from 'src/app/shared/models/roupa.model';\r\nimport { CrudRoupasService } from '../services/crud-roupas.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Interface } from 'readline';\r\nimport { Categoria } from 'src/app/shared/models/categoria.model';\r\nimport { RoupaDTO } from 'src/app/shared/models/roupa-dto.model';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-editar-roupa',\r\n  templateUrl: './editar-roupa.component.html',\r\n  styleUrls: ['./editar-roupa.component.css']\r\n})\r\nexport class EditarRoupaComponent implements OnInit {\r\n\r\n  @ViewChild(\"formRoupa\") formRoupa!: NgForm;\r\n  roupa!: Roupa;\r\n  categorias!: Categoria[];\r\n  constructor(\r\n    private roupaService: CrudRoupasService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.categorias = await this.roupaService.getCategorias();\r\n    let id = +this.route.snapshot.params['id'];\r\n    const roupa = await this.roupaService.buscarPorId(id);\r\n    if (roupa !== null) {\r\n      this.roupa = roupa;\r\n    }\r\n    else {\r\n      throw new Error(\"Roupa não encontrada: id = \" + id);\r\n    }\r\n  }\r\n\r\n\r\n  atualizar(formulario: NgForm): void {\r\n    let roupa = formulario.value as RoupaDTO;\r\n    this.roupaService.atualizar(roupa);\r\n\r\n    //this.roupaService.atualizar(roupa);\r\n    //this.router.navigate(['/roupas']);\r\n\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h1>Editar Roupa</h1>\r\n  <div class=\"well\">\r\n    <form #formRoupa=\"ngForm\" (ngSubmit)=\"atualizar(formRoupa)\">\r\n      <div class=\"form-group\">\r\n        <label for=\"nome\">Nome:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"nome\" name=\"nome\" minlength=\"2\" required #nome=\"ngModel\"\r\n          [(ngModel)]=\"roupa.descricao\" ngModel />\r\n        <div class=\"alert alert-danger\" *ngIf=\"nome.errors && (nome.dirty || nome.touched)\">\r\n          <div [hidden]=\"!nome.errors['required']\">Digite o nome da roupa.</div>\r\n          <div [hidden]=\"!nome.errors['minlength']\">\r\n            O nome deve conter ao menos 2 caracteres.\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"preco\">Preço:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"preco\" name=\"preco\" required #preco=\"ngModel\"\r\n          [(ngModel)]=\"roupa.valor\" ngModel />\r\n        <div class=\"alert alert-danger\" *ngIf=\"preco.errors && (preco.dirty || preco.touched)\">\r\n          <div [hidden]=\"!preco.errors['required']\">Digite o preço.</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"nome\">Prazo:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"prazo\" name=\"prazo\" required #prazo=\"ngModel\"\r\n          [(ngModel)]=\"roupa.tempoDeLavagem\" ngModel />\r\n        <div class=\"alert alert-danger\" *ngIf=\"prazo.errors && (prazo.dirty || prazo.touched)\">\r\n          <div [hidden]=\"!prazo.errors['required']\">Digite o prazo.</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"categoria\">Categoria:</label>\r\n        <select required class=\"form-select  mb-4\" name=\"categoria\" #categoria [value]=\"roupa.categoria\" ngModel>\r\n          <option *ngFor=\"let categoria of categorias;\" [value]=\"categoria.numero\">{{categoria.descricao}}\r\n          </option>\r\n        </select>\r\n\r\n        <div class=\"form-group\" style=\"margin-top: 5px\">\r\n          <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!formRoupa.form.valid\">\r\n            <i class=\"fa fa-save\" aria-hidden=\"true\"></i> Atualizar\r\n          </button>\r\n          <a class=\"btn btn-secondary\" style=\"margin-left: 5px\" [routerLink]=\"['/roupas']\">\r\n            <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> Voltar\r\n          </a>\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","export * from \"./crud-roupas.module\";\r\nexport * from \"./services/crud-roupas.service\";\r\nexport * from \"./listar-roupas/listar-roupas.component\";\r\nexport * from \"./inserir-roupa/inserir-roupa.component\";\r\nexport * from \"./editar-roupa/editar-roupa.component\";","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Roupa } from 'src/app/shared/models/roupa.model';\r\nimport { CrudRoupasService } from '../services/crud-roupas.service';\r\nimport { Router } from '@angular/router';\r\nimport { NgFor } from '@angular/common';\r\nimport { Categoria } from 'src/app/shared/models/categoria.model';\r\nimport { RoupaDTO } from 'src/app/shared/models/roupa-dto.model';\r\n\r\n@Component({\r\n  selector: 'app-inserir-roupa',\r\n  templateUrl: './inserir-roupa.component.html',\r\n  styleUrls: ['./inserir-roupa.component.css']\r\n})\r\nexport class InserirRoupaComponent {\r\n  @ViewChild('formRoupa') formRoupa!: NgForm;\r\n  roupa!: Roupa;\r\n  categorias!: Categoria[];\r\n\r\n  constructor(\r\n    private roupaService: CrudRoupasService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.roupa = new Roupa(0, \"\", 0, \"\", \"\", 0);\r\n    this.categorias = await this.roupaService.getCategorias();\r\n  }\r\n\r\n  inserir(formulario: NgForm): void {\r\n    let dados = formulario.value;\r\n    let roupa: RoupaDTO = new RoupaDTO(dados.preco, dados.prazo, dados.categoria, dados.nome);\r\n    if (this.formRoupa.form.valid) {\r\n      this.roupaService.inserir(roupa);\r\n      this.router.navigate([\"/roupas\"]);\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h1>Nova Roupa</h1>\r\n  <div class=\"well\">\r\n    <form #formRoupa=\"ngForm\" (ngSubmit)=\"inserir(formRoupa)\">\r\n      <div class=\"form-group\">\r\n        <label for=\"nome\">Nome:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"nome\" name=\"nome\" minlength=\"2\" obrigatorio stringOnly ngModel\r\n          #nome=\"ngModel\" />\r\n        <div class=\"alert alert-danger\" *ngIf=\"nome.errors && (nome.dirty || nome.touched)\">\r\n          <div [hidden]=\"!nome.errors['obrigatorio']\">Digite o nome da roupa.</div>\r\n          <div [hidden]=\"!nome.errors['minlength']\">\r\n            O nome deve conter ao menos 2 caracteres.\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"preco\">Preço:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"preco\" name=\"preco\" required #preco=\"ngModel\" ngModel />\r\n        <div class=\"alert alert-danger\" *ngIf=\"preco.errors && (preco.dirty || preco.touched)\">\r\n          <div [hidden]=\"!preco.errors['required']\">\r\n            Digite o preco da roupa.\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group mb-2\">\r\n        <label for=\"prazo\">Prazo:</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"prazo\" name=\"prazo\" required ngModel #prazo=\"ngModel\" />\r\n        <div class=\"alert alert-danger\" *ngIf=\"prazo.errors && (prazo.dirty || prazo.touched)\">\r\n          <div [hidden]=\"!prazo.errors['required']\">\r\n            Digite o prazo da roupa.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group mb-2\">\r\n        <label for=\" prazo\">Categoria:</label>\r\n        <select required class=\"form-select  mb-4\" name=\"categoria\" #categoria [value]=\"categoria\" ngModel>\r\n          <option *ngFor=\"let categoria of categorias;\" [value]=\"categoria.numero\">{{categoria.descricao}}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\" style=\"margin-top: 5px\">\r\n        <button type=\"submit\" class=\"btn btn-primary\">\r\n          <i class=\" fa fa-save\" aria-hidden=\"true\"></i> Salvar\r\n        </button>\r\n        <a class=\"btn btn-secondary\" [routerLink]=\"['/roupas']\" style=\"margin-left: 5px\">\r\n          <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> Voltar\r\n        </a>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { CrudRoupasService } from '../services/crud-roupas.service';\r\nimport { Roupa } from 'src/app/shared/models/roupa.model';\r\n\r\n@Component({\r\n  selector: 'app-listar-roupas',\r\n  templateUrl: './listar-roupas.component.html',\r\n  styleUrls: ['./listar-roupas.component.css']\r\n})\r\n\r\nexport class ListarRoupasComponent implements OnInit {\r\n\r\n  roupas: Roupa[] = [];\r\n\r\n  constructor(private roupaService: CrudRoupasService) { }\r\n  async ngOnInit(): Promise<void> {\r\n    this.roupas = await this.roupaService.getRoupas();\r\n  }\r\n\r\n\r\n  async remover($event: any, roupa: Roupa): Promise<void> {\r\n    $event.preventDefault();\r\n    if (confirm(`Deseja remover a roupa ${roupa.descricao}?`)) {\r\n      await this.roupaService.remover(Roupa.getNumberAsString(roupa.numero));\r\n      this.roupas = await this.roupaService.getRoupas();\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h1>Roupas</h1>\r\n  <table class=\"table table-striped table-bordered table-hover\">\r\n    <tbody>\r\n      <tr>\r\n        <th>Nome</th>\r\n        <th>Preço</th>\r\n        <th>Prazo</th>\r\n        <th class=\"text-center\">\r\n          <a [routerLink]=\"['/roupas/novo']\" href=\"#\" title=\"Novo\" alt=\"Novo\" class=\"btn btn-xs btn-success\">\r\n            <i class=\"fa fa-plus\" aria-hidden=\"true\"></i> Novo\r\n          </a>\r\n        </th>\r\n      </tr>\r\n      <tr *ngFor=\"let roupa of roupas\">\r\n        <td>{{ roupa.descricao }}</td>\r\n        <td>{{ roupa.valor }}</td>\r\n        <td>{{ roupa.tempoDeLavagem }}</td>\r\n        <td class=\"text-center\" style=\"width: 300px\">\r\n          <a href=\"#\" title=\"Editar\" alt=\"Editar\" class=\"btn btn-xs btn-info\"\r\n            [routerLink]=\"['/roupas/editar', roupa.numero]\">\r\n            <i class=\"fa fa-edit\" aria-hidden=\"true\"></i> Editar\r\n          </a>\r\n          <a href=\"#\" title=\"Remover\" alt=\"Remover\" class=\"btn btn-xs btn-danger\" style=\"margin-left: 5px\"\r\n            (click)=\"remover($event, roupa)\">\r\n            <i class=\"fa fa-times\" aria-hidden=\"true\"></i> Remover\r\n          </a>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <p *ngIf=\"roupas.length == 0\">Nenhuma roupa cadastrada.</p>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { RequestMaker } from 'src/app/services/requestService';\r\nimport { Categoria } from 'src/app/shared/models/categoria.model';\r\nimport { RoupaDTO } from 'src/app/shared/models/roupa-dto.model';\r\n\r\nimport { Roupa } from 'src/app/shared/models/roupa.model';\r\nimport { Router } from '@angular/router';\r\n\r\nconst LS_CHAVE: string = \"roupas\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CrudRoupasService {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n\r\n  async getRoupas(): Promise<Roupa[]> {\r\n    let response = await RequestMaker.getData<Roupa[]>(\"/roupa/get/roupas\");\r\n    if (response.ok(response.data)) {\r\n      return response.data;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async getCategorias(): Promise<Categoria[]> {\r\n    let response = await RequestMaker.getData<Categoria[]>(\"/categoria/get/categorias\");\r\n    if (response.ok(response.data)) {\r\n      return response.data;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  listarTodos(): Roupa[] {\r\n    const roupas = localStorage[LS_CHAVE];\r\n    return roupas ? JSON.parse(roupas) : [];\r\n  }\r\n  async inserir(roupa: RoupaDTO): Promise<void> {\r\n    let response = await RequestMaker.postData(\"/roupa/add/roupa\", roupa);\r\n    if (!response.ok(response.data)) {\r\n      alert(\"Não foi possível adicionar a roupa!\");\r\n    }\r\n  }\r\n\r\n  private ajustarId(id: number): string {\r\n    let idString = id.toString();\r\n    while (idString.length < 4) {\r\n      idString = \"0\" + idString;\r\n    }\r\n    return idString;\r\n  }\r\n\r\n  async buscarPorId(id: number): Promise<Roupa | null> {\r\n    let idString = this.ajustarId(id);\r\n    let response = await RequestMaker.postData<Roupa>(\"/roupa/get/roupa\", { \"numero\": idString });\r\n    if (response.ok(response.data)) {\r\n      return response.data;\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n  async atualizar(roupa: any): Promise<void> {\r\n\r\n    let response = await RequestMaker.postData(\"/roupa/update/roupa\", {\r\n      valor: roupa.preco,\r\n      tempoDeLavagem: roupa.prazo,\r\n      numeroCategoria: roupa.categoria,\r\n      descricao: roupa.nome,\r\n    });\r\n    if (response.ok(response.data)) {\r\n      this.router.navigate([\"/roupas/listar\"]);\r\n    } else {\r\n      alert(\"Não foi possivel atualizar a roupa\");\r\n    }\r\n  }\r\n  async remover(id: string): Promise<void> {\r\n    let response = await RequestMaker.postData(\"/roupa/delete/roupa\", { string: id });\r\n    if (response.ok(response.data)) {\r\n\r\n    } else {\r\n      alert(\"Não foi possível deletar a roupa !\");\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","export const environment = {\r\n    prodution: false,\r\n    API_URL: \"http://localhost:8080/api\",\r\n    SECONDARY_API_URL: \"https://lavanderia-backend.onrender.com/api\"\r\n}","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Funcionario } from 'src/app/shared/models/funcionario.model';\r\nimport { FuncionarioService } from '../services';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Endereco } from 'src/app/shared';\r\n\r\n@Component({\r\n  selector: 'app-editar-funcionario',\r\n  templateUrl: './editar-funcionario.component.html',\r\n  styleUrls: ['./editar-funcionario.component.css']\r\n})\r\nexport class EditarFuncionarioComponent implements OnInit {\r\n\r\n  @ViewChild(\"formFuncionario\") formFuncionario!: NgForm;\r\n  cidade!: any;\r\n  cep!: any;\r\n  complemento!: any;\r\n  endereco!: any;\r\n\r\n  funcionario: Funcionario = new Funcionario(\"\", \"\", \"\", \"\", \"\", new Endereco(\"\", \"\", \"\", \"\", \"\"), \"\");\r\n\r\n  constructor(\r\n    private funcService: FuncionarioService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) { }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n\r\n    const cpf: string = this.route.snapshot.params['cpf'];\r\n    const data = await this.funcService.buscarFuncionarioPorCPF(cpf);\r\n    this.funcionario = new Funcionario(data.cpf, data.nome, data.dataNasc, data.email, data.senha, data.endereco, data.telefone);\r\n    console.log(this.funcionario);\r\n  }\r\n\r\n  atualizarFuncionario(): void {\r\n\r\n    this.funcService.atualizarFuncionario(this.funcionario);\r\n    //this.router.navigate(['/funcionario']);\r\n\r\n  }\r\n\r\n  async requestCep() {\r\n\r\n    console.log()\r\n\r\n    await this.funcService.getCep('83045100').then((response) => {\r\n      let data = response.data;\r\n      this.funcionario.endereco.cep = data.cep;\r\n      this.funcionario.endereco.cidade = data.localidade;\r\n      this.funcionario.endereco.complemento = data.complemento;\r\n      this.funcionario.endereco.endereco = data.logradouro;\r\n      this.funcionario.endereco.numero = data.siafi;\r\n    }).catch((error) => {\r\n      console.log(error.menssage);\r\n    })\r\n  }\r\n\r\n}\r\n","<h1>Editar Cadastro de Funcionário</h1>\r\n\r\n<div class=\"container\">\r\n    <div class=\"well\">\r\n        <form #formFuncionario=\"ngForm\">\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"nome\">Nome:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"nome\" id=\"nome\" [(ngModel)]=\"funcionario.nome\"\r\n                    #nome=\"ngModel\" minlength=\"2\" required>\r\n                <div *ngIf=\"nome.errors && (nome.dirty || nome.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!nome.errors['required']\">Digite o nome do funcionario.</div>\r\n                    <div [hidden]=\"!nome.errors['minlength']\">Nome inválido!</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"cpf\">CPF:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"cpf\" id=\"cpf\" [(ngModel)]=\"funcionario.cpf\" #cpf=\"ngModel\"\r\n                    minlength=\"11\" mask=\"000.000.000-00\" required mask=\"000.000.000-00\">\r\n                <div *ngIf=\"cpf.errors && (cpf.dirty || cpf.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!cpf.errors['required']\">Digite o cpf do funcionario.</div>\r\n                    <div [hidden]=\"!cpf.errors['minlength']\">CPF inválido!</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"email\">Email:</label>\r\n                <input type=\"email\" class=\"form-control\" name=\"email\" id=\"email\" [(ngModel)]=\"funcionario.email\"\r\n                    #email=\"ngModel\" minlength=\"4\" required>\r\n                <div *ngIf=\"email.errors && (email.dirty || email.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!email.errors['required']\">Digite o email do funcionario.</div>\r\n                    <div [hidden]=\"!email.errors['minlength']\">Email inválido!</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"telefone\">Telefone:</label>\r\n                <input type=\"email\" class=\"form-control\" name=\"telefone\" id=\"telefone\"\r\n                    [(ngModel)]=\"funcionario.telefone\" #telefone=\"ngModel\" minlength=\"8\" maxlength=\"13\"\r\n                    mask=\"(00) 00000-0000\" required>\r\n                <div *ngIf=\"telefone.errors && (telefone.dirty || telefone.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!telefone.errors['required']\">Telefone obrigatório.</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"dataNasc\">Data de Nascimento:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"dataNasc\" id=\"dataNasc\" [(ngModel)]=\"funcionario.dataNasc\"\r\n                    #dataNasc=\"ngModel\" minlength=\"7\" mask=\"d0/M0/0000\" required>\r\n                <div *ngIf=\"dataNasc.errors && (dataNasc.dirty || dataNasc.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!dataNasc.errors['required']\">Digite a data de nascimento do funcionario.</div>\r\n                    <div [hidden]=\"!dataNasc.errors['minlength']\">Data de nascimento inválida!</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"senha\">Senha:</label>\r\n                <input type=\"password\" class=\"form-control\" name=\"senha\" id=\"senha\" [(ngModel)]=\"funcionario.senha\"\r\n                    #senha=\"ngModel\" minlength=\"4\" required>\r\n                <div *ngIf=\"senha.errors && (senha.dirty || senha.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!senha.errors['required']\">Digite uma senha válida.</div>\r\n                    <div [hidden]=\"!senha.errors['minlength']\">Senha inválida!</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <div class=\"col-sm-5 inputCep\">\r\n                    CEP:\r\n                    <div class=\"input-group col-sm-5\">\r\n                        <button class=\"btn btn-outline-secondary\" (click)=\"requestCep()\" type=\"button\"\r\n                            id=\"button-addon1\"><img src=\"../../../assets/search.svg\" alt=\"\"></button>\r\n                        <input type=\"text\" id=\"cep\" ngModel name=\"cep\" [(ngModel)]=\"funcionario.endereco.cep\"\r\n                            mask=\"00000-000\" class=\"form-control inputlol\" placeholder=\"\"\r\n                            aria-label=\"Example text with button addon\" aria-describedby=\"button-addon1\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm-7\">\r\n                    <label class=\"form-label mt-2\" for=\"nome\">Cidade:</label>\r\n                    <input type=\"text\" class=\"form-control inputlol text-left\" id=\"cidade\" required ngModel\r\n                        name=\"cidade\" [(ngModel)]=\"funcionario.endereco.cidade\">\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <label class=\"form-label mt-2\" for=\"nome\">Endereço:</label>\r\n                <input type=\"text\" class=\"form-control inputlol text-left\" id=\"endereco\" required ngModel\r\n                    name=\"endereco\" [(ngModel)]=\"funcionario.endereco.endereco\">\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-4\">\r\n                    <label class=\"form-label mt-2\" for=\"nome\">Número:</label>\r\n\r\n                    <input type=\"text\" class=\"form-control inputlol text-left\" id=\"numero\" required ngModel\r\n                        [(ngModel)]=\"funcionario.endereco.numero\" name=\"numero\">\r\n                </div>\r\n                <div class=\"col-sm-8\">\r\n                    <label class=\"form-label mt-2\" for=\"nome\">Complemento:</label>\r\n                    <input type=\"text\" class=\"form-control inputlol text-left\" id=\"complemento\" ngModel\r\n                        name=\"complemento\" [(ngModel)]=\"funcionario.endereco.complemento\">\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"atualizarFuncionario()\">\r\n                    <i class=\"fa fa-save\" aria-hidden=\"true\"></i>\r\n                    Atualizar\r\n                </button>\r\n                <a [routerLink]=\"['/funcionario']\" class=\"btn btn-secondary\" href=\"\">\r\n                    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n                    Voltar\r\n                </a>\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { FuncionarioService } from './services';\r\nimport { ListarFuncionarioComponent } from './listar-funcionario';\r\nimport { InserirFuncionarioComponent } from './inserir-funcionario';\r\nimport { EditarFuncionarioComponent } from './editar-funcionario';\r\nimport { NgxMaskDirective, NgxMaskPipe, provideNgxMask } from 'ngx-mask';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ListarFuncionarioComponent,\r\n    InserirFuncionarioComponent,\r\n    EditarFuncionarioComponent,\r\n\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    NgxMaskDirective,\r\n    NgxMaskPipe\r\n  ],\r\n  providers: [\r\n    FuncionarioService,\r\n    provideNgxMask()\r\n  ]\r\n})\r\nexport class FuncionarioModule { }\r\n","export * from './funcionario.module';\r\nexport * from './listar-funcionario';\r\nexport * from './inserir-funcionario';\r\nexport * from './editar-funcionario';\r\nexport * from './services';","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Funcionario } from 'src/app/shared/models/funcionario.model';\r\nimport { FuncionarioService } from '../services';\r\nimport { Router } from '@angular/router';\r\nimport { FormularioFuncionario } from 'src/app/shared/models/formulario-funcionario.model';\r\nimport { Endereco } from 'src/app/shared';\r\n\r\n@Component({\r\n  selector: 'app-inserir-funcionario',\r\n  templateUrl: './inserir-funcionario.component.html',\r\n  styleUrls: ['./inserir-funcionario.component.css']\r\n})\r\nexport class InserirFuncionarioComponent implements OnInit {\r\n\r\n  @ViewChild('formFuncionario') formFuncionario!: NgForm;\r\n  cep!: any;\r\n  complemento!: any;\r\n  endereco!: any;\r\n  cidade: any;\r\n  funcionario!: Funcionario;\r\n\r\n  constructor(\r\n    private funcService: FuncionarioService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    let dados = {\r\n      cep: \"88110-609\",\r\n      cidade: \"cidade1\",\r\n      endereco: \"endereco1\",\r\n      numero: \"numero123\",\r\n      complemento: \"complement123\",\r\n      cpf: \"866.568.810-25\",\r\n      nome: \"nome1\",\r\n      dataNasc: \"12032021\",\r\n      email: \"email2@email.com\",\r\n      senha: \"1234\",\r\n      telefone: \"32120398\"\r\n    }\r\n    let endereco = new Endereco(dados.cep, dados.cidade, dados.endereco, dados.numero, dados.complemento);\r\n    let funcionario = new Funcionario(dados.cpf, dados.nome, dados.dataNasc, dados.email, dados.senha, endereco, dados.telefone);\r\n  }\r\n\r\n  inserirFuncionario(formulario: NgForm): void {\r\n    let dados: FormularioFuncionario = formulario.value\r\n    let endereco = new Endereco(dados.cep, dados.cidade, dados.endereco, dados.numero, dados.complemento);\r\n    let funcionario = new Funcionario(dados.cpf, dados.nome, dados.dataNasc, dados.email, dados.senha, endereco, dados.telefone);\r\n    if (this.formFuncionario.form.valid) {\r\n      this.funcService.inserirFuncionario(funcionario);\r\n    }\r\n  }\r\n\r\n  requestCep() {\r\n    let value = this.cep as string\r\n    value.replace('-', '')\r\n    this.funcService.getCep(this.cep).then((response) => {\r\n      this.cidade = response.data.cidade;\r\n      this.endereco = response.data.endereco;\r\n    })\r\n  }\r\n}\r\n","<h1>CADASTRO DE FUNCIONARIO</h1>\r\n\r\n<div class=\"container\">\r\n\r\n    <div class=\"well\">\r\n\r\n        <form action=\"\" #formFuncionario=\"ngForm\" (ngSubmit)=\"inserirFuncionario(formFuncionario)\">\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"nome\">Nome:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"nome\" id=\"nome\" #nome=\"ngModel\" minlength=\"2\" ngModel\r\n                    required>\r\n                <div *ngIf=\"nome.errors && (nome.dirty || nome.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!nome.errors['required']\">Digite o nome do funcionario.</div>\r\n                    <div [hidden]=\"!nome.errors['minlength']\">Nome inválido!</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"cpf\">CPF:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"cpf\" id=\"cpf\" #cpf=\"ngModel\" minlength=\"11\"\r\n                    mask=\"000.000.000-00\" ngModel required>\r\n                <div *ngIf=\"cpf.errors && (cpf.dirty || cpf.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!cpf.errors['required']\">Digite o cpf do funcionario.</div>\r\n                    <div [hidden]=\"!cpf.errors['minlength']\">CPF inválido!</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"email\">Email:</label>\r\n                <input type=\"email\" class=\"form-control\" ngModel name=\"email\" id=\"email\" #email=\"ngModel\" minlength=\"4\"\r\n                    required>\r\n                <div *ngIf=\"email.errors && (email.dirty || email.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!email.errors['required']\">Digite o email do funcionario.</div>\r\n                    <div [hidden]=\"!email.errors['minlength']\">Email inválido!</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"telefone\">Telefone:</label>\r\n                <input type=\"email\" class=\"form-control\" ngModel name=\"telefone\" id=\"telefone\" #telefone=\"ngModel\"\r\n                    minlength=\"8\" maxlength=\"13\" required>\r\n                <div *ngIf=\"telefone.errors && (telefone.dirty || telefone.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!telefone.errors['required']\">Telefone obrigatório.</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"dataNasc\">Data de Nascimento:</label>\r\n                <input type=\"text\" class=\"form-control\" ngModel name=\"dataNasc\" id=\"dataNasc\" #dataNasc=\"ngModel\"\r\n                    minlength=\"8\" mask=\"d0/M0/0000\" required>\r\n                <div *ngIf=\"dataNasc.errors && (dataNasc.dirty || dataNasc.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!dataNasc.errors['required']\">Digite a data de nascimento do funcionario.</div>\r\n                    <div [hidden]=\"!dataNasc.errors['minlength']\">Data de nascimento inválida!</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"senha\">Senha:</label>\r\n                <input type=\"text\" class=\"form-control\" ngModel name=\"senha\" id=\"senha\" #senha=\"ngModel\" minlength=\"4\"\r\n                    required>\r\n                <div *ngIf=\"senha.errors && (senha.dirty || senha.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!senha.errors['required']\">Digite uma senha válida.</div>\r\n                    <div [hidden]=\"!senha.errors['minlength']\">Senha inválida!</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <label for=\"cep\">CEP:</label>\r\n                <button class=\"btn btn-outline-secondary\" (click)=\"requestCep()\" type=\"button\" id=\"button-addon1\"><img\r\n                        src=\"../../../assets/search.svg\" alt=\"\"></button>\r\n                <input type=\"text\" class=\"form-control\" ngModel name=\"cep\" id=\"cep\" #cep=\"ngModel\" minlength=\"8\"\r\n                    mask=\"00000-000\" required>\r\n                <div *ngIf=\"cep.errors && (cep.dirty || cep.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!cep.errors['required']\">CEP obrigatório.</div>\r\n                    <div [hidden]=\"!cep.errors['minlength']\">O cep deve conter ao menos 8 digitos</div>\r\n                </div>\r\n\r\n                <label for=\"cidade\">Cidade:</label>\r\n                <input type=\"text\" class=\"form-control\" ngModel name=\"cidade\" id=\"cidade\" #cidade=\"ngModel\"\r\n                    minlength=\"2\" required>\r\n                <div *ngIf=\"cidade.errors && (cidade.dirty || cidade.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!cidade.errors['required']\">Cidade obrigatória.</div>\r\n                    <div [hidden]=\"!cidade.errors['minlength']\">A cidade deve conter ao menos 2 digitos</div>\r\n                </div>\r\n\r\n                <label for=\"endereco\">Endereço:</label>\r\n                <input type=\"text\" class=\"form-control\" ngModel name=\"endereco\" id=\"endereco\" #endereco=\"ngModel\"\r\n                    minlength=\"2\" required>\r\n                <div *ngIf=\"endereco.errors && (endereco.dirty || endereco.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!endereco.errors['required']\">Endereço obrigatório.</div>\r\n                    <div [hidden]=\"!endereco.errors['minlength']\">O Endereço deve conter ao menos 2 digitos</div>\r\n                </div>\r\n\r\n                <label for=\"numero\">Número:</label>\r\n                <input type=\"text\" class=\"form-control\" ngModel name=\"numero\" id=\"numero\" #numero=\"ngModel\" required>\r\n                <div *ngIf=\"numero.errors && (numero.dirty || numero.touched)\" class=\"alert alert-danger\">\r\n                    <div [hidden]=\"!numero.errors['required']\">Número do endereço obrigatório.</div>\r\n                </div>\r\n\r\n                <label for=\"complemento\">Complemento:</label>\r\n                <input type=\"text\" class=\"form-control\" ngModel name=\"complemento\" id=\"complemento\"\r\n                    #complemento=\"ngModel\">\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!formFuncionario.form.valid\">\r\n                    <i class=\"fa fa-save\" aria-hidden=\"true\"></i>\r\n                    Salvar\r\n                </button>\r\n                <a [routerLink]=\"['/funcionario/listar']\" class=\"btn btn-secondary\" href=\"\">\r\n                    <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\r\n                    Voltar\r\n                </a>\r\n            </div>\r\n\r\n        </form>\r\n\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { FuncionarioService } from '../services';\r\nimport { Funcionario } from 'src/app/shared/models/funcionario.model';\r\nimport { RequestMaker } from 'src/app/services/requestService';\r\n\r\n@Component({\r\n  selector: 'app-listar-funcionario',\r\n  templateUrl: './listar-funcionario.component.html',\r\n  styleUrls: ['./listar-funcionario.component.css']\r\n})\r\nexport class ListarFuncionarioComponent implements OnInit {\r\n\r\n  funcionarios: Funcionario[] = [];\r\n\r\n  constructor(private funcService: FuncionarioService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getFuncionarios();\r\n  }\r\n\r\n  removerFuncionario($event: any, funcionario: Funcionario): void {\r\n    $event.preventDefault();\r\n    if (confirm(`Deseja realmente remover o funcionário ${funcionario.nome}?`)) {\r\n      this.funcService.removerFuncionario(funcionario.cpf!);\r\n      this.getFuncionarios();\r\n    }\r\n  }\r\n\r\n  private async getFuncionarios() {\r\n    let resultado = await this.funcService.listarFuncionarios();\r\n    if (resultado != null) {\r\n      this.funcionarios = resultado;\r\n    }\r\n  }\r\n}\r\n","<h1>Lista de Funcionário</h1>\r\n\r\n<div class=\"container\">\r\n\r\n    <table class=\"table table-striped table-bordered table-hover\">\r\n\r\n        <tbody>\r\n\r\n            <tr>\r\n                <th>Nome</th>\r\n                <th>CPF</th>\r\n                <th>Email</th>\r\n                <th>Telefone</th>\r\n                <th>Data de Nascimento</th>\r\n                <th class=\"text-center\">\r\n                    <a [routerLink]=\"['/funcionario/inserir']\" href=\"#\" title=\"Novo\" alt=\"Novo\"\r\n                        class=\"btn btn-xn btn-success\">\r\n                        <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n                        Novo\r\n                    </a>\r\n                </th>\r\n            </tr>\r\n\r\n            <tr *ngFor=\"let funcionario of funcionarios\">\r\n                <td>{{funcionario.nome}}</td>\r\n                <td>{{funcionario.cpf | mask:'000.000.000-00'}}</td>\r\n                <td>{{funcionario.email}}</td>\r\n                <td>{{funcionario.telefone}}</td>\r\n                <td>{{funcionario.dataNasc}}</td>\r\n                <td class=\"text-center\" style=\"width: 300px\">\r\n                    <a [routerLink]=\"['/funcionario/editar', funcionario.cpf]\" href=\"#\" title=\"Editar\" alt=\"Editar\"\r\n                        class=\"btn btn-xn btn-info\">\r\n                        <i class=\"fa fa-edit\" aria-hidden=\"true\"></i>\r\n                        Editar\r\n                    </a>\r\n                    <a href=\"#\" title=\"Remover\" alt=\"Remover\" class=\"btn btn-xn btn-danger\"\r\n                        (click)=\"removerFuncionario($event, funcionario)\">\r\n                        <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n                        Remover\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n\r\n        </tbody>\r\n\r\n    </table>\r\n\r\n    <p *ngIf=\"funcionarios.length==0\">Nenhum funcionario cadastrado.</p>\r\n\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { RequestMaker } from 'src/app/services/requestService';\r\nimport { Cadastro, Endereco } from 'src/app/shared';\r\n\r\nimport axios from 'axios';\r\nimport { Funcionario } from 'src/app/shared/models/funcionario.model';\r\n\r\nconst LS_CHAVE: string = \"funcionario\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FuncionarioService {\r\n\r\n  constructor(private router: Router) {\r\n  }\r\n\r\n  async listarFuncionarios(): Promise<Funcionario[] | null> {\r\n    let response = await RequestMaker.getData<Funcionario[]>(\"/cadastro/get/funcionarios\");\r\n    if (response.ok(response.data)) {\r\n      return response.data;\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n  };\r\n\r\n  async inserirFuncionario(func: Funcionario): Promise<void> {\r\n    if (func.nome && func.cpf && func.endereco && func.telefone && func.email) {\r\n      let cadastro = new Cadastro(func.nome, func.cpf, func.telefone, func.email, \"funcionario\", func.senha, func.dataNasc, func.endereco);\r\n      let response = await RequestMaker.postData(\"/cadastro/add/cadastro\", cadastro);\r\n      if (response.ok(response.data)) {\r\n        this.router.navigate([\"/funcionario\"]);\r\n      } else {\r\n        alert(\"Usuario não pode ser inserido!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  async buscarFuncionarioPorCPF(cpf: string): Promise<Cadastro> {\r\n    let response = await RequestMaker.postData<Cadastro>(\"/cadastro/get/cadastro\", { string: cpf });\r\n    if (response.ok(response.data)) {\r\n      return response.data;\r\n    } else {\r\n      alert(\"Funcionário não encontrado: cpf = \" + cpf);\r\n      throw new Error(\"Funcionário não encontrado: cpf = \" + cpf);\r\n    }\r\n  };\r\n\r\n\r\n  async atualizarFuncionario(func: Funcionario): Promise<void> {\r\n    let response = await RequestMaker.postData(\"/cadastro/update/cadastro\", func);\r\n    if (response.ok(response.data)) {\r\n\r\n    } else {\r\n      alert(\"Não foi possível atualizar o \")\r\n    }\r\n  }\r\n\r\n  async removerFuncionario(cpf: string): Promise<void> {\r\n    let response = await RequestMaker.postData(\"/cadastro/delete/cadastro\", { string: cpf });\r\n    if (!response.ok(response.data)) {\r\n      alert(\"Não foi possivel deletar o funcionário\");\r\n    }\r\n  }\r\n\r\n  getCep(cep: string) {\r\n    return axios.get(`https://viacep.com.br/ws/${cep}/json/`, {\r\n      headers: {\r\n        \"Content-Type\": 'application/json'\r\n      }\r\n    })\r\n  }\r\n}\r\n","export * from './listagemF.module';\r\nexport * from './listagemF';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Format } from 'src/app/shared/pipes/format';\r\nimport { ListagemFComponent } from './listagemF/listagemF.component';\r\nimport { NgxMaskDirective, NgxMaskPipe, provideNgxMask } from 'ngx-mask';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ListagemFComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    Format,\r\n    NgxMaskDirective,\r\n    NgxMaskPipe,\r\n    FormsModule\r\n  ],\r\n  exports: [\r\n    ListagemFComponent\r\n  ],\r\n  providers: [\r\n    provideNgxMask()\r\n  ]\r\n})\r\nexport class ListagemFModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { Pedido } from 'src/app/shared';\r\nimport { RequestMaker } from 'src/app/services/requestService';\r\n\r\ninterface pedido {\r\n  pedido: string,\r\n  valor: number,\r\n  data: string,\r\n  prazo: string,\r\n  status: string\r\n}\r\n@Component({\r\n  selector: 'app-listagemF',\r\n  templateUrl: './listagemF.component.html',\r\n  styleUrls: ['./listagemF.component.css']\r\n})\r\nexport class ListagemFComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  estado_pedido: string | null = null;\r\n  dados: Pedido[] = [];\r\n  dataIni: any;\r\n  dataFi: any;\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.carregarDadosDoServidor(null);\r\n  }\r\n\r\n  onDateInputChange(): void {\r\n    this.carregarDadosDoServidor(this.estado_pedido);\r\n  }\r\n\r\n  ///api/pedido/get/pedidos&dataInicial=String&dataPrazo=String&status=String\r\n  async carregarDadosDoServidor(estado: string | null) {\r\n    let response = null;\r\n\r\n    if (this.dataIni && this.dataFi) {\r\n      response = await RequestMaker.getData<Pedido[]>(`/pedido/get/pedidos?dataInicial=${this.dataIni}&dataPrazo=${this.dataFi}`)\r\n    }\r\n    else if (this.dataIni && !this.dataFi) {\r\n      response = await RequestMaker.getData<Pedido[]>(`/pedido/get/pedidos?dataInicial=${this.dataIni}`)\r\n    }\r\n    else if (this.dataIni == null && this.dataFi == null && estado == null) {\r\n      response = await RequestMaker.getData<Pedido[]>(\"/pedido/get/pedidos\");\r\n    }\r\n    if (response?.ok(response.data)) {\r\n      this.dados = response.data\r\n    }\r\n\r\n  }\r\n  /* {\r\n  \"numero\": \"Long\",\r\n  \"status\": \"String\",\r\n  \"cpf\":\"string\"\r\n} */\r\n  async confirmarRecolhimento(pedido: Pedido) {\r\n\r\n    if (confirm(`Deseja realmente confirmar o recolhimento do pedido ${pedido.numero} do cliente ${pedido.cadastro?.cpf}?`)) {\r\n\r\n      if (pedido.cadastro) {\r\n        RequestMaker.postData<void>(\"/pedido/update/status\", {\r\n          numeroPedido: pedido.numero,\r\n          status: \"RECOLHIDO\",\r\n          cpf: pedido.cadastro?.cpf\r\n        });\r\n      }\r\n\r\n    }\r\n  }\r\n  /* {\r\n     \"numero\": \"Long\",\r\n     \"cpf\" : \"String\",\r\n     \"status\": \"String\"\r\n   }*/\r\n  async confirmarLavagem(pedido: Pedido) {\r\n\r\n    if (confirm(`Deseja realmente confirmar a lavagem do pedido ${pedido.numero} do cliente ${pedido.cadastro?.cpf}?`)) {\r\n\r\n      if (pedido.cadastro) {\r\n        RequestMaker.postData<void>(\"/pedido/update/status\", {\r\n          numeroPedido: pedido.numero,\r\n          status: \"AGUARDANDO PAGAMENTO\",\r\n          cpf: pedido.cadastro?.cpf\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /* {\r\n    \"numero\": \"Long\",\r\n    \"cpf\" : \"String\",\r\n    \"status\": \"String\"\r\n  }*/\r\n  async finalizarPedido(pedido: Pedido) {\r\n\r\n    if (confirm(`Deseja realmente finalizar o pedido ${pedido.numero} do cliente ${pedido.cadastro?.cpf}?`)) {\r\n\r\n      if (pedido.cadastro) {\r\n        RequestMaker.postData<void>(\"/pedido/update/status\", {\r\n          numeroPedido: pedido.numero,\r\n          status: \"FINALIZADO\",\r\n          cpf: pedido.cadastro?.cpf\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>Listagem de Pedidos</title>\r\n</head>\r\n\r\n<body>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col mb-3\">\r\n                <h1 id=\"titulo\">Visualizacação de Pedidos</h1>\r\n            </div>\r\n        </div>\r\n        <!-- \r\n        <div class=\"row\">\r\n            <h4 class=\"col-sm-1\">Filtrar: </h4>\r\n            <div class=\"col-sm-3 mb-3\">\r\n                <select class=\"form-select filtro\" (change)=\"mudarEstadoPedidoFiltro($event)\">\r\n                    <option disabled selected>Estado do pedido</option>\r\n                    <option>Aguardando Pagamento</option>\r\n                    <option>Finalizado</option>\r\n                    <option>Em Aberto</option>\r\n                    <option>Recolhido</option>\r\n                    <option>Pago</option>\r\n                    <option>Pendente</option>\r\n                    <option>Cancelado</option>\r\n                    <option>Todos</option>\r\n                </select>\r\n            </div>\r\n        </div> -->\r\n\r\n        <div class=\"card p-3\" id=\"card\">\r\n            <h4 class=\"mb-3\">Filtrar por data</h4>\r\n            <label>Data Início</label>\r\n            <input class=\"mb-3 form-control inputlol\" [(ngModel)]='dataIni' (ngModelChange)=\"onDateInputChange()\"\r\n                type=\"date\">\r\n            <label>Data Prazo</label>\r\n            <input class=\"mb-3 form-control inputlol\" [(ngModel)]='dataFi' (ngModelChange)=\"onDateInputChange()\"\r\n                type=\"date\">\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <table class=\"table\" id=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>CPF</th>\r\n                            <th>Nº Pedido</th>\r\n                            <th>Valor</th>\r\n                            <th>Data</th>\r\n                            <th>Prazo</th>\r\n                            <th>Status</th>\r\n                            <th>Ação</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ng-container *ngFor=\"let pedido of dados\">\r\n                            <tr class=\"fadeIn\">\r\n                                <td>{{pedido.cadastro?.cpf! | mask:'000.000.000-00'}}</td>\r\n                                <td>{{pedido.numero}}</td>\r\n                                <td>R$ {{pedido.total}}</td>\r\n                                <td>{{pedido.data! | format}}</td>\r\n                                <td>{{pedido.prazo! | format}}</td>\r\n                                <td class=\"td-button\" [ngSwitch]=\"pedido.status\">\r\n                                    <!-- <td class=\"td-button\"> -->\r\n                                    <button *ngSwitchCase=\"'EM ABERTO'\" class=\"btn btn-aberto\"\r\n                                        [disabled]>{{pedido.status}}</button>\r\n                                    <button *ngSwitchCase=\"'RECOLHIDO'\"\r\n                                        class=\"btn btn-recolhido\">{{pedido.status}}</button>\r\n                                    <button *ngSwitchCase=\"'AGUARDANDO PAGAMENTO'\"\r\n                                        class=\"btn btn-aguardando\">{{pedido.status}}</button>\r\n                                    <button *ngSwitchCase=\"'PAGO'\" class=\"btn btn-pago\">{{pedido.status}}</button>\r\n                                    <button *ngSwitchCase=\"'CANCELADO'\"\r\n                                        class=\"btn btn-cancelado\">{{pedido.status}}</button>\r\n                                    <button *ngSwitchCase=\"'FINALIZADO'\"\r\n                                        class=\"btn btn-finalizado\">{{pedido.status}}</button>\r\n                                </td>\r\n                                <td class=\"td-button\">\r\n                                    <button *ngIf=\"pedido.status == 'RECOLHIDO'\" class=\"btn btn-primary\"\r\n                                        (click)=\"confirmarLavagem(pedido)\">Confirmar\r\n                                        Lavagem</button>\r\n                                    <button *ngIf=\"pedido.status == 'EM ABERTO'\" class=\"btn btn-primary\"\r\n                                        (click)=\"confirmarRecolhimento(pedido)\">Confirmar\r\n                                        Recolhimento</button>\r\n                                    <button *ngIf=\"pedido.status == 'PAGO'\" class=\"btn btn-success\"\r\n                                        (click)=\"finalizarPedido(pedido)\">Finalizar</button>\r\n                                </td>\r\n                            </tr>\r\n                        </ng-container>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>\r\n\r\n</html>","export * from './listagem.module';\r\nexport * from './listagem';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgSwitch } from '@angular/common';\r\nimport { ListagemComponent } from './listagem/listagem.component';\r\nimport { NgxMaskDirective, NgxMaskPipe, provideNgxMask } from 'ngx-mask';\r\nimport { Format } from '../shared/pipes/format';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ListagemComponent,\r\n\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    Format,\r\n    NgxMaskDirective,\r\n    NgxMaskPipe,\r\n    NgSwitch,\r\n    RouterModule\r\n  ],\r\n  exports: [\r\n    ListagemComponent\r\n  ],\r\n  providers: [\r\n    provideNgxMask(),\r\n  ]\r\n})\r\nexport class ListagemModule { }","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { RequestMaker } from 'src/app/services/requestService';\r\nimport { Pedido } from 'src/app/shared';\r\n\r\ninterface pedido {\r\n  pedido: string,\r\n  valor: number,\r\n  data: string,\r\n  prazo: string,\r\n  status: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-listagem',\r\n  templateUrl: './listagem.component.html',\r\n  styleUrls: ['./listagem.component.css']\r\n})\r\nexport class ListagemComponent implements OnInit {\r\n\r\n  estado_pedido: string | null = null;\r\n  dados: Pedido[] = [];\r\n\r\n  constructor(private ref: ChangeDetectorRef) {\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    await this.carregarDadosDoServidor(null);\r\n    // console.log(this.dados.forEach((dado) => { console.log(dado.status) }));\r\n  }\r\n\r\n  async carregarDadosDoServidor(estado: string | null) {\r\n    let response = null;\r\n    if (estado == null || estado === 'TODOS') {\r\n      response = await RequestMaker.getData<Pedido[]>(\"/usuario/get/pedidos\");\r\n    }\r\n    else {\r\n      response = await RequestMaker.getData<Pedido[]>(`/usuario/get/pedidos?status=${estado}`);\r\n    }\r\n    if (response.ok(response.data)) {\r\n      this.dados = response.data\r\n    }\r\n    this.ref.markForCheck();\r\n    console.log(this.dados);\r\n    console.log(estado);\r\n\r\n  }\r\n\r\n\r\n  mudarEstadoPedidoFiltro(estado: Event) {\r\n    const target = estado.target as HTMLSelectElement;\r\n    this.estado_pedido = target.value.toUpperCase();\r\n    this.carregarDadosDoServidor(this.estado_pedido);\r\n  }\r\n\r\n\r\n  async alterarStatus(pedido: Pedido) {\r\n\r\n    if (confirm(`Deseja realmente cancelar o pedido ${pedido.numero}?`)) {\r\n\r\n      RequestMaker.postData<void>(\"/usuario/update/pedido/status\", {\r\n        numeroPedido: pedido.numero,\r\n        status: \"CANCELADO\"\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>Listagem de Pedidos</title>\r\n</head>\r\n\r\n<body>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col mb-3\">\r\n                <h1 id=\"titulo\">Seus Pedidos</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <table class=\"table\" id=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nº Pedido</th>\r\n                            <th>Total</th>\r\n                            <th>Data</th>\r\n                            <th>Prazo</th>\r\n                            <th>Status</th>\r\n                            <th></th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <!-- <ng-container *ngFor=\"let pedido of dados\">-->\r\n                        <!-- <tr class=\"fadeIn\" *ngIf=\"filtrarEstadoPedido(pedido.status)\" [id]=\"pedido.pedido\"> -->\r\n                        <tr class=\"fadeIn\" *ngFor=\"let pedido of dados\">\r\n                            <td>{{pedido.numero}}</td>\r\n                            <td>R$ {{pedido.total?.toFixed(2)?.replace('.',',')}}</td>\r\n                            <td>{{pedido.data! | format}}</td>\r\n                            <td>{{pedido.prazo! | format}}</td>\r\n                            <td class=\"td-button\" [ngSwitch]=\"pedido.status?.toUpperCase()\">\r\n                                <button *ngSwitchCase=\"'EM ABERTO'\" class=\"btn btn-aberto\">{{pedido.status}}</button>\r\n                                <button *ngSwitchCase=\"'APROVADO'\" class=\"btn btn-aberto\">{{pedido.status}}</button>\r\n                                <button *ngSwitchCase=\"'REJEITADO'\" class=\"btn btn-cancelado\">{{pedido.status}}</button>\r\n                                <button *ngSwitchCase=\"'RECOLHIDO'\" class=\"btn btn-recolhido\">{{pedido.status}}</button>\r\n                                <button *ngSwitchCase=\"'AGUARDANDO PAGAMENTO'\"\r\n                                    class=\"btn btn-aguardando\">{{pedido.status}}</button>\r\n                                <button *ngSwitchCase=\"'PAGO'\" class=\"btn btn-pago\">{{pedido.status}}</button>\r\n                                <button *ngSwitchCase=\"'CANCELADO'\" class=\"btn btn-cancelado\">{{pedido.status}}</button>\r\n                                <button *ngSwitchCase=\"'FINALIZADO'\"\r\n                                    class=\"btn btn-finalizado\">{{pedido.status}}</button>\r\n                            </td>\r\n                            <td class=\"td-button\">\r\n                                <a [routerLink]=\"['/pagamento', pedido.numero]\" class=\"btn btn-success\"\r\n                                    *ngIf=\"pedido.status === 'AGUARDANDO PAGAMENTO'\">\r\n                                    Pagar\r\n                                </a>\r\n                                <button class=\"btn disabled\" *ngIf=\"pedido.status !== 'AGUARDANDO PAGAMENTO'\">\r\n                                    Pagar\r\n                                </button>\r\n                            </td>\r\n\r\n                            <td class=\"td-button\">\r\n                                <button class=\"btn btn-danger\" *ngIf=\"pedido.status === 'EM ABERTO'\"\r\n                                    (click)=\"alterarStatus(pedido)\">\r\n                                    Cancelar\r\n                                </button>\r\n                                <button class=\"btn disabled\" *ngIf=\"pedido.status !== 'EM ABERTO'\">\r\n                                    Cancelar\r\n                                </button>\r\n                            </td>\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <p *ngIf=\"dados.length == 0\">Não foram encontrados pedidos</p>\r\n    </div>\r\n</body>\r\n\r\n</html>","export * from './orcamento.module';\r\nexport * from './orcamento';\r\nexport * from './services';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { OrcamentoComponent } from './orcamento';\r\nimport { OrcamentoService } from './services';\r\nimport { Format } from '../shared/pipes/format';\r\n@NgModule({\r\n  declarations: [\r\n    OrcamentoComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    Format\r\n  ],\r\n  exports: [\r\n    OrcamentoComponent\r\n  ],\r\n  providers: [\r\n    OrcamentoService\r\n  ]\r\n})\r\nexport class OrcamentoModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { OrcamentoService } from '../services';\r\nimport { Pedido } from 'src/app/shared';\r\n\r\n@Component({\r\n  selector: 'app-orcamento',\r\n  templateUrl: './orcamento.component.html',\r\n  styleUrls: ['./orcamento.component.css']\r\n})\r\n\r\nexport class OrcamentoComponent implements OnInit {\r\n\r\n  pedidos!: Pedido[];\r\n\r\n  constructor(private orcamentoService: OrcamentoService) {\r\n\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.pedidos = await this.orcamentoService.getPedidos();\r\n    console.log(this.pedidos);\r\n  }\r\n\r\n\r\n  async aprovar(pedido: Pedido) {\r\n    await this.orcamentoService.aprovar(pedido);\r\n    this.pedidos = await this.orcamentoService.getPedidos();\r\n  }\r\n\r\n  async rejeitar(pedido: Pedido) {\r\n    await this.orcamentoService.rejeitar(pedido);\r\n\r\n    this.pedidos = await this.orcamentoService.getPedidos();\r\n  }\r\n\r\n  async filtrar(data: HTMLInputElement) {\r\n    let value = data.value;\r\n    if (value != null && value != undefined && value != '') {\r\n      this.pedidos = await this.orcamentoService.filtrar(value);\r\n      // this.pedidos = await this.orcamentoService.getPedidos();\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n    <title>Orçamentos</title>\r\n</head>\r\n\r\n<body>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col mb-3 px-0\">\r\n                <h1 id=\"titulo\">Orçamentos</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"row ml-4\" style=\"max-width: 30%\">\r\n            <div class=\"col\">\r\n                <h4>Filtrar:</h4>\r\n            </div>\r\n            <div class=\"col mx-0 px-0 mx-0\">\r\n                <input #data type=\"date\" class=\"form-control pesquisar px-0\">\r\n            </div>\r\n            <div class=\"col\">\r\n                <button class=\"btn btn-primary\" style=\"background-color: white\"><img src=\"../../../assets/search.svg\"\r\n                        (click)=\"filtrar(data)\"></button>\r\n            </div>\r\n        </div>\r\n        <div class=\"row ml-4\">\r\n            <table class=\"table\" id=\"tabela\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Prazo</th>\r\n                        <th>Valor total</th>\r\n                        <th>Ação</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let pedido of pedidos\">\r\n                        <td>{{pedido.data | format}} </td>\r\n                        <td>R$ {{pedido.total?.toFixed(2)?.replace('.',',')}}</td>\r\n                        <td>\r\n                            <button [disabled]=\"pedido.status?.toUpperCase() != 'EM ABERTO'\" (click)=\"aprovar(pedido)\"\r\n                                class=\"btn btn-success mx-2\">Aprovar</button>\r\n                            <button [disabled]=\"pedido.status?.toUpperCase() != 'EM ABERTO'\" (click)=\"rejeitar(pedido)\"\r\n                                class=\"btn btn-danger mx-2\">Rejeitar</button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n</body>\r\n\r\n</html>","import { Injectable } from '@angular/core';\r\nimport { RequestMaker } from 'src/app/services/requestService';\r\nimport { Pedido } from 'src/app/shared';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrcamentoService {\r\n\r\n  constructor() { }\r\n\r\n  async getPedidos(): Promise<Pedido[]> {\r\n    let response = await RequestMaker.getData<Pedido[]>(\"/usuario/get/pedidos\");\r\n    if (response.ok(response.data)) {\r\n      return response.data;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async aprovar(pedido: Pedido) {\r\n    let response = await RequestMaker.postData<Pedido[]>(\"/usuario/update/pedido/status\", { numeroPedido: pedido.numero, status: \"APROVADO\" });\r\n    if (!response.ok(response.data)) {\r\n      alert(\"Não foi possível aprovar o pedido\");\r\n    }\r\n  }\r\n\r\n  async rejeitar(pedido: Pedido) {\r\n    let response = await RequestMaker.postData<Pedido[]>(\"/usuario/update/pedido/status\", { numeroPedido: pedido.numero, status: \"REJEITADO\" });\r\n    if (!response.ok(response.data)) {\r\n      alert(\"Não foi possível rejeitar o pedido\");\r\n    }\r\n  }\r\n\r\n\r\n  async filtrar(data: String) {\r\n\r\n    let response = await RequestMaker.getData<Pedido[]>(`/usuario/get/pedidos?&data=${data}`);\r\n    if (response.ok(response.data)) {\r\n      return response.data;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n}\r\n","export * from './pagamento.module';\r\nexport * from './pagamento';\r\nexport * from './service';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Format } from '../shared/pipes/format';\r\nimport { PagamentoComponent } from './pagamento';\r\nimport { PagamentoService } from './service';\r\n\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PagamentoComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    Format\r\n  ],\r\n  exports: [\r\n    PagamentoComponent\r\n  ],\r\n  providers: [\r\n    PagamentoService\r\n  ]\r\n})\r\nexport class PagamentoModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Pedido } from 'src/app/shared';\r\nimport { PagamentoService } from '../service';\r\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\r\nimport { RequestMaker } from 'src/app/services/requestService';\r\nimport { Item } from 'src/app/shared/models/item.model';\r\nimport { Roupa } from 'src/app/shared';\r\n\r\n@Component({\r\n  selector: 'app-pagamento',\r\n  templateUrl: './pagamento.component.html',\r\n  styleUrls: ['./pagamento.component.css']\r\n})\r\nexport class PagamentoComponent implements OnInit {\r\n\r\n  pedido!: Pedido;\r\n  roupas!: Item[];\r\n\r\n  constructor(private pagamentoService: PagamentoService,\r\n    private router: Router,\r\n    private route: ActivatedRoute) {\r\n\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n\r\n    let id = this.route.snapshot.params['id'];\r\n    let response = await RequestMaker.getData<Pedido>(`/usuario/get/pedido?numeroPedido=${id}`);\r\n    if (response.ok(response.data)) {\r\n      this.pedido = response.data;\r\n      if (this.pedido.roupas) {\r\n        this.roupas = this.pedido.roupas;\r\n      }\r\n    }\r\n    console.log(response);\r\n  }\r\n\r\n  async pagar(pedido: Pedido) {\r\n    RequestMaker.postData<void>(\"/usuario/update/pedido/status\", {\r\n      numeroPedido: pedido.numero,\r\n      status: \"PAGO\"\r\n    });\r\n    this.router.navigate(['/seus-pedidos']);\r\n  }\r\n\r\n  /* async buscarPorPedido(numero: string): Promise<void> {\r\n      let response = await RequestMaker.getData<Pedido>(`/usuario/get/pedido?numeroPedido=${numero}`);\r\n      if (response.ok(response.data)) {\r\n        this.pedido = response.data;\r\n        if (this.pedido.roupas) {\r\n          this.roupas = this.pedido.roupas;\r\n        }\r\n        console.log(this.roupas);\r\n        this.vazio = 1;\r\n      }\r\n      else {\r\n        this.vazio = 2;\r\n      }\r\n    }\r\n  \r\n    getRoupas(): Item[] | undefined {\r\n      if (this.pedido != undefined) {\r\n        if (this.pedido.roupas != undefined) {\r\n          this.roupas = this.pedido.roupas;\r\n        }\r\n      }\r\n      return [];\r\n    }*/\r\n\r\n  /*\r\n    async ngOnInit(): Promise<void> {\r\n      let response = await RequestMaker.getData<Pedido[]>(\"/usuario/get/pedidos?status=em%20aberto\");\r\n      if (response.ok(response.data)) {\r\n        this.pedidos = response.data;\r\n      } else {\r\n        this.vazio = true;\r\n      }\r\n    }\r\n  */\r\n\r\n  /* \r\n  async alterarStatus(pedido: Pedido) {\r\n\r\n    if (confirm(`Deseja realmente cancelar o pedido ${pedido.numero}?`)) {\r\n\r\n      RequestMaker.postData<void>(\"/usuario/update/pedido/status\", {\r\n        numeroPedido: pedido.numero,\r\n        status: \"CANCELADO\"\r\n      });\r\n\r\n    }\r\n  }*/\r\n\r\n}\r\n","<div class=\"container mt-4\">\r\n    <div class=\"card\">\r\n        <div class=\"card-header\">\r\n            <h5 class=\"card-title\">Detalhes do Pedido</h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <p><strong>Número do Pedido:</strong> {{pedido.numero}}</p>\r\n                    <p><strong>Data do Pedido:</strong> {{pedido.data! | format}}</p>\r\n                    <p><strong>Prazo de Entrega:</strong> {{pedido.prazo! | format}}</p>\r\n                    <p><strong>Valor Total:</strong>R$ {{pedido.total}}</p>\r\n                    <p><strong>Situação do Pedido:</strong> {{pedido.status}}</p>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"itensDropdown\">Itens do Pedido:</label>\r\n                        <div class=\"d-flex flex-wrap\">\r\n                            <div class=\"m-1\">\r\n                                <table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Nome</th>\r\n                                            <th></th>\r\n                                            <th>Qtd.</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor=\"let roupa of roupas\">\r\n                                            <td>{{ roupa.descricao }}</td>\r\n                                            <td>x</td>\r\n                                            <td>{{ roupa.quantidade }}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" class=\"btn btn-success\" (click)=\"pagar(pedido)\">Pagar</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <a class='btn btn-dark' [routerLink]=\"['/seus-pedidos']\">Voltar</a>\r\n</div>","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PagamentoService {\r\n\r\n  constructor() { }\r\n\r\n  buscarPorId(id: any) {\r\n\r\n  }\r\n}\r\n","export * from './pagina-inicial-funcionario.module';\r\nexport * from './listar-pedidos-abertos';","import { Component, OnInit } from '@angular/core';\r\nimport { PaginaInicialFuncionarioService } from '../services';\r\nimport { PedidosEmAberto } from 'src/app/shared/models/pedidos-em-aberto.model';\r\nimport { Item } from 'src/app/shared/models/item.model';\r\nimport { Pedido } from '../../shared/models/pedido.model'\r\nimport { RequestMaker } from 'src/app/services/requestService';\r\n\r\ninterface pedido {\r\n  pedido: string,\r\n  valor: number,\r\n  data: string,\r\n  prazo: string,\r\n  status: string\r\n}\r\n@Component({\r\n  selector: 'app-listar-pedidos-abertos',\r\n  templateUrl: './listar-pedidos-abertos.component.html',\r\n  styleUrls: ['./listar-pedidos-abertos.component.css']\r\n})\r\nexport class ListarPedidosAbertosComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  estado_pedido: string | null = null;\r\n  dados: Pedido[] = [];\r\n  dataIni: any;\r\n  dataFi: any;\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.carregarDadosDoServidor(null);\r\n  }\r\n\r\n  onDateInputChange(): void {\r\n    this.carregarDadosDoServidor(this.estado_pedido);\r\n  }\r\n\r\n  ///api/pedido/get/pedidos&dataInicial=String&dataPrazo=String&status=String\r\n  async carregarDadosDoServidor(estado: string | null) {\r\n    let response = null;\r\n\r\n    if (this.dataIni && this.dataFi) {\r\n      response = await RequestMaker.getData<Pedido[]>(`/pedido/get/pedidos?dataInicial=${this.dataIni}&dataPrazo=${this.dataFi}`)\r\n    }\r\n    else if (this.dataIni && !this.dataFi) {\r\n      response = await RequestMaker.getData<Pedido[]>(`/pedido/get/pedidos?dataInicial=${this.dataIni}`)\r\n    }\r\n    else if (this.dataIni == null && this.dataFi == null && estado == null) {\r\n      response = await RequestMaker.getData<Pedido[]>(\"/pedido/get/pedidos\");\r\n    }\r\n    if (response?.ok(response.data)) {\r\n      this.dados = response.data\r\n    }\r\n\r\n  }\r\n  /* {\r\n  \"numero\": \"Long\",\r\n  \"status\": \"String\",\r\n  \"cpf\":\"string\"\r\n} */\r\n  async confirmarRecolhimento(pedido: Pedido) {\r\n\r\n    if (confirm(`Deseja realmente confirmar o recolhimento do pedido ${pedido.numero} do cliente ${pedido.cadastro?.cpf}?`)) {\r\n\r\n      if (pedido.cadastro) {\r\n        RequestMaker.postData<void>(\"/pedido/update/status\", {\r\n          numeroPedido: pedido.numero,\r\n          status: \"RECOLHIDO\",\r\n          cpf: pedido.cadastro?.cpf\r\n        });\r\n      }\r\n\r\n    }\r\n  }\r\n  /* {\r\n     \"numero\": \"Long\",\r\n     \"cpf\" : \"String\",\r\n     \"status\": \"String\"\r\n   }*/\r\n  async confirmarLavagem(pedido: Pedido) {\r\n\r\n    if (confirm(`Deseja realmente confirmar a lavagem do pedido ${pedido.numero} do cliente ${pedido.cadastro?.cpf}?`)) {\r\n\r\n      if (pedido.cadastro) {\r\n        RequestMaker.postData<void>(\"/pedido/update/status\", {\r\n          numeroPedido: pedido.numero,\r\n          status: \"AGUARDANDO PAGAMENTO\",\r\n          cpf: pedido.cadastro?.cpf\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /* {\r\n    \"numero\": \"Long\",\r\n    \"cpf\" : \"String\",\r\n    \"status\": \"String\"\r\n  }*/\r\n  async finalizarPedido(pedido: Pedido) {\r\n\r\n    if (confirm(`Deseja realmente finalizar o pedido ${pedido.numero} do cliente ${pedido.cadastro?.cpf}?`)) {\r\n\r\n      if (pedido.cadastro) {\r\n        RequestMaker.postData<void>(\"/pedido/update/status\", {\r\n          numeroPedido: pedido.numero,\r\n          status: \"FINALIZADO\",\r\n          cpf: pedido.cadastro?.cpf\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  /*\r\n    pedido!: Pedido;\r\n    roupas!: Item[];\r\n    vazio: number = 0;\r\n    dados: Pedido[] = [];\r\n  \r\n    pedidosEmAberto: PedidosEmAberto[] = [];\r\n  \r\n    constructor(private paginaInicialFuncionarioService: PaginaInicialFuncionarioService) {\r\n  \r\n    }\r\n  \r\n    ngOnInit(): void {\r\n      this.listarPedidos();\r\n      //this.pedidosEmAberto = this.listarTodosPedidosEmAbertos();    \r\n    }\r\n  \r\n    async listarPedidos() {\r\n      let response = await RequestMaker.getData<Pedido>(\"/usuario/get/pedidos\");\r\n      console.log(response);\r\n      if (response.ok(response.data)) {\r\n        this.pedido = response.data;\r\n        if (this.pedido.roupas) {\r\n          this.roupas = this.pedido.roupas;\r\n        }\r\n        console.log(this.roupas);\r\n      }\r\n  \r\n    }\r\n  \r\n    async confirmarRecolhimento(pedido: Pedido) {\r\n  \r\n      if (confirm(`Deseja realmente confirmar a lavegem do pedido ${pedido.numero}?`)) {\r\n  \r\n        RequestMaker.postData<void>(\"/pedido/update/status\", {\r\n          numeroPedido: pedido.numero,\r\n          status: \"RECOLHIDO\"\r\n        });\r\n  \r\n      }\r\n    }\r\n  \r\n    async buscarPorPedido(numero: string): Promise<void> {\r\n      let response = await RequestMaker.getData<Pedido>(`/usuario/get/pedido?numeroPedido=${numero}`);\r\n      if (response.ok(response.data)) {\r\n        this.pedido = response.data;\r\n        if (this.pedido.roupas) {\r\n          this.roupas = this.pedido.roupas;\r\n        }\r\n        console.log(this.roupas);\r\n        this.vazio = 1;\r\n      }\r\n      else {\r\n        this.vazio = 2;\r\n      }\r\n    }\r\n  \r\n    getRoupas(): Item[] | undefined {\r\n      if (this.pedido != undefined) {\r\n        if (this.pedido.roupas != undefined) {\r\n          this.roupas = this.pedido.roupas;\r\n        }\r\n      }\r\n      return [];\r\n    }\r\n  \r\n  */\r\n}\r\n","<div class=\"pl-3 m-3\">\r\n    <h1>Página Inicial</h1>\r\n    <h4>Pedidos em aberto</h4>\r\n</div>\r\n<div class=\"container\">\r\n\r\n    <table class=\"table\" id=\"table\">\r\n        <thead>\r\n            <tr>\r\n                <th>CPF</th>\r\n                <th>Nº Pedido</th>\r\n                <th>Valor</th>\r\n                <th>Data</th>\r\n                <th>Prazo</th>\r\n                <th>Status</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <ng-container *ngFor=\"let pedido of dados\">\r\n                <ng-container *ngIf=\"pedido.status === 'EM ABERTO'\">\r\n                    <tr class=\"fadeIn\">\r\n                        <td>{{pedido.cadastro?.cpf}}</td>\r\n                        <td>{{pedido.numero}}</td>\r\n                        <td>R$ {{pedido.total}}</td>\r\n                        <td>{{pedido.data! | format}}</td>\r\n                        <td>{{pedido.prazo! | format}}</td>\r\n                        <td class=\"td-button\" [ngSwitch]=\"pedido.status\">\r\n                            <button *ngSwitchCase=\"'EM ABERTO'\" class=\"btn btn-aberto\"\r\n                                [disabled]>{{pedido.status}}</button>\r\n                            <button *ngSwitchCase=\"'RECOLHIDO'\" class=\"btn btn-recolhido\">{{pedido.status}}</button>\r\n                            <button *ngSwitchCase=\"'AGUARDANDO PAGAMENTO'\"\r\n                                class=\"btn btn-aguardando\">{{pedido.status}}</button>\r\n                            <button *ngSwitchCase=\"'PAGO'\" class=\"btn btn-pago\">{{pedido.status}}</button>\r\n                            <button *ngSwitchCase=\"'CANCELADO'\" class=\"btn btn-cancelado\">{{pedido.status}}</button>\r\n                            <button *ngSwitchCase=\"'FINALIZADO'\" class=\"btn btn-finalizado\">{{pedido.status}}</button>\r\n                        </td>\r\n                    </tr>\r\n\r\n                </ng-container>\r\n            </ng-container>\r\n        </tbody>\r\n    </table>\r\n    <p *ngIf=\"dados.length == 0\">Nenhum pedido em aberto</p>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PaginaInicialFuncionarioService } from './services';\r\nimport { ListarPedidosAbertosComponent } from './listar-pedidos-abertos/listar-pedidos-abertos.component';\r\nimport { Format } from 'src/app/shared/pipes/format';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ListarPedidosAbertosComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    Format\r\n  ],\r\n  providers: [\r\n    PaginaInicialFuncionarioService\r\n  ]\r\n})\r\nexport class PaginaInicialFuncionarioModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { RequestMaker } from 'src/app/services/requestService';\r\nimport { PedidosEmAberto } from 'src/app/shared/models/pedidos-em-aberto.model';\r\nimport { Pedido } from '../../shared/models/pedido.model'\r\nimport { Item } from 'src/app/shared/models/item.model';\r\n\r\nconst LS_CHAVE: string = \"pedidosEmAberto\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class PaginaInicialFuncionarioService {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n/*\r\n\r\nlistarTodosPedidosEmAberto(): PedidosEmAberto[] {\r\n  const pedidosEmAberto = localStorage[LS_CHAVE];\r\n\r\n  return pedidosEmAberto ? JSON.parse(pedidosEmAberto) : [];\r\n}\r\n\r\ninserirPedidoEmAberto(pedidoEmAberto: PedidosEmAberto): void {\r\n  const pedidosEmAberto = this.listarTodosPedidosEmAberto();\r\n\r\n  pedidosEmAberto.push(pedidoEmAberto);\r\n\r\n  localStorage[LS_CHAVE] = JSON.stringify(pedidosEmAberto);\r\n}\r\n\r\nbuscarPorPedidoEmAberto(numeroPedido: number): PedidosEmAberto | undefined {\r\n  const pedidosEmAberto: PedidosEmAberto[] = this.listarTodosPedidosEmAberto();\r\n\r\n  return pedidosEmAberto.find(pedidoEmAberto => pedidoEmAberto.numeroPedido === numeroPedido);\r\n}\r\n\r\natualizarPedidoEmAberto(pedidoEmAberto: PedidosEmAberto): void {\r\n  const pedidosEmAberto: PedidosEmAberto[] = this.listarTodosPedidosEmAberto();\r\n\r\n  pedidosEmAberto.forEach((obj, index, objs) => {\r\n    if (pedidoEmAberto.numeroPedido === obj.numeroPedido) {\r\n      objs[index] = pedidoEmAberto\r\n    }\r\n  });\r\n\r\n  localStorage[LS_CHAVE] = JSON.stringify(pedidosEmAberto);\r\n}\r\n\r\nremoverPedidoEmAberto(numeroPedido: number): void {\r\n  let pedidosEmAberto: PedidosEmAberto[] = this.listarTodosPedidosEmAberto();\r\n\r\n  pedidosEmAberto = pedidosEmAberto.filter(pedidosEmAberto => pedidosEmAberto.numeroPedido !== numeroPedido);\r\n\r\n  localStorage[LS_CHAVE] = JSON.stringify(pedidosEmAberto);\r\n}*/","export * from './pagina-inicial.module';\r\nexport * from './pagina-inicial';\r\nexport * from './services';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgxMaskDirective, NgxMaskPipe, provideNgxMask } from 'ngx-mask';\r\nimport { PaginaInicialComponent } from './pagina-inicial';\r\nimport { PaginaInicialService } from './services';\r\nimport { Format } from '../shared/pipes/format';\r\nimport { Router } from '@angular/router';\r\nimport { RouterModule } from '@angular/router';\r\n@NgModule({\r\n  declarations: [\r\n    PaginaInicialComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NgxMaskDirective,\r\n    NgxMaskPipe,\r\n    Format,\r\n    RouterModule\r\n  ],\r\n  providers: [\r\n    provideNgxMask()\r\n  ]\r\n})\r\nexport class PaginaInicialModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RequestMaker } from 'src/app/services/requestService';\r\nimport { PaginaInicialService } from '../services';\r\nimport { Pedido } from 'src/app/shared';\r\n\r\n@Component({\r\n  selector: 'app-pagina-inicial',\r\n  templateUrl: './pagina-inicial.component.html',\r\n  styleUrls: ['./pagina-inicial.component.css']\r\n})\r\nexport class PaginaInicialComponent implements OnInit {\r\n\r\n  pedidos!: Pedido[];\r\n  vazio = false;\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    let response = await RequestMaker.getData<Pedido[]>(\"/usuario/get/pedidos?status=em%20aberto\");\r\n    if (response.ok(response.data)) {\r\n      this.pedidos = response.data;\r\n    } else {\r\n      this.vazio = true;\r\n    }\r\n  }\r\n\r\n  async alterarStatus(pedido: Pedido) {\r\n\r\n    if (confirm(`Deseja realmente cancelar o pedido ${pedido.numero}?`)) {\r\n\r\n      RequestMaker.postData<void>(\"/usuario/update/pedido/status\", {\r\n        numeroPedido: pedido.numero,\r\n        status: \"CANCELADO\"\r\n      });\r\n\r\n    }\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Página Inicial</title>\r\n</head>\r\n\r\n<body>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <h1>Lista de pedidos</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <table class=\"table fadeIn\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Nº Pedido</th>\r\n                            <th scope=\"col\">Total</th>\r\n                            <th scope=\"col\">Data</th>\r\n                            <th scope=\"col\">Prazo</th>\r\n                            <th scope=\"col\">Status</th>\r\n                            <th scope=\"col\">Ação</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let pedido of pedidos\">\r\n                            <!--\r\n                            <th scope=\"row\">000001</th>\r\n                            <td>R$ 60,00</td>\r\n                            <td>11/08/2023</td>\r\n                            <td>17/08/2023</td>\r\n                            <td class=\"btn btn-aberto\">Em aberto</td>\r\n                            <td><button class=\"btn btn-danger\">Cancelar</button></td>\r\n                            -->\r\n                            <td>{{pedido.numero}}</td>\r\n                            <td>{{pedido.total}}</td>\r\n                            <td>{{pedido.data! | format}}</td>\r\n                            <td>{{pedido.prazo! | format}}</td>\r\n                            <td>{{pedido.status}}</td>\r\n                            <td><button (click)=\"alterarStatus(pedido)\" class=\"btn btn-danger\">Cancelar</button></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <p *ngIf=\"pedidos.length! == 0\">Não foram encontrados pedidos em aberto</p>\r\n    </div>\r\n</body>\r\n\r\n</html>","import { Injectable, OnInit } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaginaInicialService implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { PedidoService } from '../services';\r\n\r\ninterface itemList {\r\n  descricao: string,\r\n  valor_un: number,\r\n  categoria: string,\r\n  prazo: number\r\n}\r\n\r\n@Component({\r\n  selector: 'app-categoria',\r\n  templateUrl: './categoria.component.html',\r\n  styleUrls: ['./categoria.component.css']\r\n})\r\n\r\nexport class CategoriaComponent implements OnInit {\r\n\r\n  @Input() categoria = '';\r\n  @Input() items: itemList[] = [];\r\n  @Output() addClick = new EventEmitter<itemList>(); // Agora emitirá um objeto itemList\r\n  ativo = false;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  switch() {\r\n    this.ativo = !this.ativo;\r\n  }\r\n\r\n  adicionar(item: itemList) {\r\n    this.addClick.emit(item); // Emita o objeto itemList completo\r\n  }\r\n}\r\n","<!-- <div id=\"container\">\r\n\r\n    <div class=\"itemRow\">\r\n\r\n        <div>\r\n            <h3 style=\"color: #5a57ff\">{{categoria}}</h3>\r\n        </div>\r\n        <button *ngIf=\"ativo==false\" class=\"btn btn-primary\" (click)=\"switch()\">&#x2193;</button>\r\n        <button *ngIf=\"ativo==true\" class=\"btn btn-primary\" (click)=\"switch()\">&#x2191;</button>\r\n\r\n    </div>\r\n    <ng-container *ngFor=\"let item of items;let i = index;\">\r\n        <div *ngIf=\"item.categoria == categoria && ativo==true\" class=\"itemRow\">\r\n            <div id=\"texto-item\">\r\n                <h5 style=\"color: #5a57ff\">\r\n                    {{item.tipo}}\r\n                    {{item.valor_un.toFixed(2)}}\r\n                </h5>\r\n            </div>\r\n            <div>\r\n                <button (click)=\"adicionar(item)\">&#43;</button>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div> -->\r\n\r\n<div id=\"container\">\r\n\r\n    <div class=\"itemRow\">\r\n\r\n        <div>\r\n            <h3 style=\"color: #5a57ff\">{{categoria}}</h3>\r\n        </div>\r\n        <button *ngIf=\"ativo==false\" class=\"btn btn-primary\" (click)=\"switch()\">&#x2193;</button>\r\n        <button *ngIf=\"ativo==true\" class=\"btn btn-primary\" (click)=\"switch()\">&#x2191;</button>\r\n\r\n    </div>\r\n    <ng-container *ngFor=\"let item of items;let i = index;\">\r\n        <div *ngIf=\"item.categoria == categoria && ativo==true\" class=\"itemRow\">\r\n            <div id=\"texto-item\">\r\n                <h5 style=\"color: #000000\">\r\n                    {{item.descricao}}\r\n                </h5>\r\n            </div>\r\n            <div>\r\n                <button class=\"btn btn-secondary\" style=\"border-color: #5a57ff;\" (click)=\"adicionar(item)\">+</button>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { PedidoService } from '../services';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\n\r\n\r\nexport class HeaderComponent implements OnInit{\r\n  \r\n  constructor() {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n}\r\n","<!-- \r\n<div id=\"header\">\r\n    <img src=\"/assets/logoLol.png\" alt=\"\">\r\n    <div id=\"wrapper\">\r\n        <span>Home</span>\r\n        <span>Serviços</span>\r\n        <span>Minha Conta</span>\r\n        <span>FAQ</span>\r\n    </div>\r\n</div>\r\n-->\r\n<nav class=\"navbar navbar-expand-lg navbar-light bg-white border-bottom mb-3\">\r\n    <div class=\"container\">\r\n        <a class=\"navbar-brand\" href=\"#\">\r\n            <img src=\"../../assets/logoLol.png\" alt=\"Logo LOL\" width=\"100\">\r\n        </a>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div class=\"col-md-1\" id=\"sair\" id=\"textDiv\">Sair</div>\r\n    </div>\r\n</nav>","export * from './pedido.module';\r\nexport * from './pedido';\r\nexport * from './header';\r\nexport * from './categoria';\r\nexport * from './services';\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { PedidoComponent } from '../pedido';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'modal-pedido',\r\n  templateUrl: './modal-pedido.component.html',\r\n  styleUrls: ['./modal-pedido.component.css']\r\n})\r\nexport class ModalPedidoComponent{\r\n  @Input() orcamento! : number;\r\n  @Input() prazoMax! : number;\r\n  @Input() listaRoupasPedido! : PedidoComponent['carrinho'];\r\n\r\n  showLink : boolean = false;\r\n  aprovado : boolean = false;\r\n  rejeitado : boolean = false;\r\n  numPedido : number = 0;\r\n  \r\n  constructor(public activeModal : NgbActiveModal, private router : Router) { }\r\n  \r\n  aprovar() : void {\r\n    this.numPedido = Math.ceil(Math.random() * 999999);\r\n    this.aprovado = true;\r\n  }\r\n  rejeitar() : void {\r\n    this.rejeitado = true;\r\n  }\r\n  sair() : void {\r\n    this.activeModal.close();\r\n    this.router.navigate(['/pagina-inicial']);\r\n  }\r\n}\r\n","<div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" style=\"color:red;\" *ngIf=\"aprovado\">N° {{this.numPedido}}</h4>\r\n    <h4 class=\"modal-title\" style=\"color:green;\" *ngIf=\"aprovado\">Aprovado!</h4>\r\n\r\n    <h4 class=\"modal-title\" style=\"color:red;\" *ngIf=\"rejeitado\">Rejeitado</h4>\r\n\r\n    <h4 class=\"modal-title\" id=\"modalLabel\" *ngIf=\"!aprovado && !rejeitado\">Detalhes do Pedido</h4>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <h5>Orçamento: R$ {{ orcamento }}</h5>\r\n    <h5>Prazo: {{ this.prazoMax }} dias</h5>\r\n    <h5>Lista de Roupas:</h5>\r\n    <ul>\r\n        <li *ngFor=\"let roupa of listaRoupasPedido\">{{ roupa.descricao }} ({{ roupa.quantidade }})</li>\r\n    </ul>\r\n</div>\r\n<div class=\"modal-footer\">\r\n    <div *ngIf=\"!aprovado && !rejeitado\">\r\n        <button type=\"button\" class=\"btn btn-success\" (click)=\"aprovar()\">\r\n            <a type=\"button\" class=\"btn btn-success\"> Aprovar</a>\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"rejeitar()\"> Rejeitar</button>\r\n    </div>\r\n    <div *ngIf=\"aprovado || rejeitado\">\r\n        <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"sair()\">\r\n            Ir para página inicial\r\n        </button>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PedidoComponent } from './pedido';\r\nimport { HeaderComponent } from './header';\r\nimport { CategoriaComponent } from './categoria';\r\nimport { PedidoService } from './services';\r\nimport { ModalPedidoComponent } from './modal-pedido/modal-pedido.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PedidoComponent,\r\n    HeaderComponent,\r\n    CategoriaComponent,\r\n    ModalPedidoComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  exports: [\r\n    PedidoComponent,\r\n    HeaderComponent,\r\n    CategoriaComponent,\r\n  ],\r\n  providers: [\r\n    CategoriaComponent,\r\n    PedidoService\r\n\r\n  ]\r\n})\r\nexport class PedidoModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PedidoService } from '../services/pedido.service';\r\nimport { PDFDocument, rgb, StandardFonts } from 'pdf-lib';\r\nimport { ModalPedidoComponent } from '../modal-pedido/modal-pedido.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\ninterface itemCarrinho {\r\n  descricao: string,\r\n  quantidade: number,\r\n  valor: number,\r\n  subtotal: number,\r\n  numeroRoupa: number\r\n}\r\n\r\ninterface itemList {\r\n  descricao: string,\r\n  valor: number,\r\n  categoria: string,\r\n  prazo: number,\r\n  numero: number\r\n}\r\n\r\ninterface Categoria {\r\n  numero: string;\r\n  descricao: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-pedido',\r\n  templateUrl: './pedido.component.html',\r\n  styleUrls: ['./pedido.component.css']\r\n})\r\n\r\n\r\nexport class PedidoComponent implements OnInit {\r\n\r\n\r\n  carrinho: itemCarrinho[] = [];\r\n  categorias: Categoria[] = [];\r\n  lista_de_items: any;\r\n  total: number = 0;\r\n  prazoMax: number = 0;\r\n\r\n  constructor(private modalService: NgbModal, private PedidoService: PedidoService) {\r\n  }\r\n\r\n  orcamento() {\r\n    const modalRef = this.modalService.open(ModalPedidoComponent);\r\n    modalRef.componentInstance.orcamento = this.total;\r\n    modalRef.componentInstance.listaRoupasPedido = this.carrinho;\r\n    modalRef.componentInstance.prazoMax = this.prazoMax;\r\n  }\r\n  //aquiiii\r\n  async gerarPDF() {\r\n\r\n    const pdfDoc = await PDFDocument.create();\r\n    const page = pdfDoc.addPage([600, 400]);\r\n\r\n\r\n    const font = await pdfDoc.embedFont(StandardFonts.Helvetica);\r\n    const { width, height } = page.getSize();\r\n    const fontSize = 30;\r\n    const text = 'Hello, PDF!';\r\n\r\n    page.drawText(text, {\r\n      x: 50,\r\n      y: height - 50,\r\n      size: fontSize,\r\n      font: font,\r\n      color: rgb(0, 0, 0),\r\n    });\r\n\r\n\r\n    const pdfBytes = await pdfDoc.save();\r\n\r\n  }\r\n\r\n  changeItemValue(index: number, operation: string) {\r\n    if (operation == 'up') {\r\n      this.carrinho[index].quantidade += 1;\r\n      this.carrinho[index].subtotal = this.carrinho[index].quantidade * this.carrinho[index].valor;\r\n      this.updateTotal();\r\n    } else {\r\n      this.carrinho[index].quantidade -= 1;\r\n      if (this.carrinho[index].quantidade <= 0) {\r\n        this.carrinho.splice(index, 1);\r\n      }\r\n      else {\r\n        this.carrinho[index].subtotal = this.carrinho[index].quantidade * this.carrinho[index].valor;\r\n      }\r\n      this.updateTotal();\r\n    }\r\n  }\r\n\r\n  addItem(event: any) {\r\n    let item = event as itemList;\r\n    for (let x = 0; x < this.carrinho.length; x++) {\r\n      if (this.carrinho[x].descricao == item.descricao) {\r\n        this.carrinho[x].quantidade += 1;\r\n        this.carrinho[x].subtotal += this.carrinho[x].valor;\r\n        this.updateTotal();\r\n        return;\r\n      }\r\n    }\r\n    this.carrinho.push({\r\n      numeroRoupa: item.numero,\r\n      descricao: item.descricao,\r\n      quantidade: 1,\r\n      valor: item.valor,\r\n      subtotal: 1 * item.valor,\r\n\r\n    })\r\n    this.updateTotal();\r\n\r\n  }\r\n\r\n  updateTotal() {\r\n    this.total = 0;\r\n    for (let x = 0; x < this.carrinho.length; x++) {\r\n      this.total += this.carrinho[x].subtotal;\r\n    }\r\n  }\r\n\r\n\r\n  limparItens() {\r\n    this.carrinho = [];\r\n    this.total = 0;\r\n  }\r\n  async requestRoupas() {\r\n    const response: any = await this.PedidoService.getRoupas();\r\n    this.lista_de_items = response;\r\n    console.log(this.lista_de_items)\r\n  }\r\n\r\n  async requestCategorias() {\r\n    const response: any = await this.PedidoService.getCategorias();\r\n    this.categorias = response;\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    await this.requestRoupas();\r\n    await this.requestCategorias();\r\n    console.log('ngOnInit: ' + this.lista_de_items);\r\n  }\r\n\r\n\r\n\r\n  async cadastrarPedido() {\r\n    const pedido = {\r\n      \"carrinhos\": this.carrinho\r\n    }\r\n    //console.log(pedido)\r\n    await this.PedidoService.postPedido(pedido).then((response: any) => {\r\n      alert(\"Pedido Cadastrado com sucesso!\")\r\n    }).catch((error) => {\r\n      alert(\"Erro ao cadastrar Pedido!\");\r\n    })\r\n\r\n  }\r\n\r\n}","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Realizar Pedido</title>\r\n</head>\r\n\r\n<body>\r\n    <h1>Realizar Pedido</h1>\r\n    <div id=\"mainBody\" class=\"container\">\r\n        <div class=\"row\">\r\n            <div id=\"categoria-container\" class=\"col mx-3\">\r\n\r\n                <div *ngFor=\"let categoria of categorias\">\r\n                    <div class=\"col\" id=\"card\">\r\n                        <app-categoria (addClick)=\"addItem($event)\" [categoria]=\"categoria.descricao\"\r\n                            [items]=\"lista_de_items\"></app-categoria>\r\n                    </div>\r\n                </div>\r\n                <!--\r\n                <div class=\"col\" id=\"card\">\r\n                    <app-categoria (addClick)=\"addItem($event)\" categoria=\"Blusas\"\r\n                        [items]=\"lista_de_items\"></app-categoria>\r\n                </div>\r\n                <div class=\"col\" id=\"card\">\r\n                    <app-categoria (addClick)=\"addItem($event)\" categoria=\"Calças\"\r\n                        [items]=\"lista_de_items\"></app-categoria>\r\n                </div>\r\n                <div class=\"col\" id=\"card\">\r\n                    <app-categoria (addClick)=\"addItem($event)\" categoria=\"Camisas\"\r\n                        [items]=\"lista_de_items\"></app-categoria>\r\n                </div>\r\n                <div class=\"col\" id=\"card\">\r\n                    <app-categoria (addClick)=\"addItem($event)\" categoria=\"Casacos\"\r\n                        [items]=\"lista_de_items\"></app-categoria>\r\n                </div> -->\r\n            </div>\r\n            <div id=\"carrinho-container\" class=\"col mx-3\">\r\n                <div id=\"carrinho\" class=\"row\">\r\n                    <div id=\"titulo\">Seus itens:</div>\r\n                    <table id=\"itemTable\" class=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Item</th>\r\n                                <th>QT</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let item of carrinho;let i = index\">\r\n                                <td>{{item.descricao}}</td>\r\n                                <td>\r\n                                    <button (click)=\"changeItemValue(i,'down')\" class=\"btn btn-primary\">&#8722;</button>\r\n                                    <span class=\"mx-3\">{{item.quantidade}}</span>\r\n                                    <button (click)=\"changeItemValue(i,'up')\" class=\"btn btn-primary\">&#43;</button>\r\n                                </td>\r\n                                <td>{{item.subtotal}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <div class=\"col w-25 m-3\">\r\n                        <button (click)=\"limparItens()\" class=\"btn btn-danger\">Limpar</button>\r\n                    </div>\r\n                    <div class=\"col w-25 m-3\">\r\n                        <button (click)=\"cadastrarPedido()\" class=\"btn btn-primary\">Continuar</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.5.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n</body>\r\n\r\n</html>\r\n<!-- <!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Realizar Pedido</title>\r\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.5.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n</head>\r\n\r\n<body>\r\n    <h1>Realizar Pedido</h1>\r\n    <div id=\"mainBody\" class=\"container\">\r\n        <div class=\"row\">\r\n            <div id=\"categoria-container\" class=\"col mx-3\">\r\n                <div class=\"col\">\r\n                    <app-categoria (addClick)=\"addItem($event)\" categoria=\"Blusas\"\r\n                        [items]=\"lista_de_items\"></app-categoria>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <app-categoria (addClick)=\"addItem($event)\" categoria=\"Calças\"\r\n                        [items]=\"lista_de_items\"></app-categoria>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <app-categoria (addClick)=\"addItem($event)\" categoria=\"Camisas\"\r\n                        [items]=\"lista_de_items\"></app-categoria>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <app-categoria (addClick)=\"addItem($event)\" categoria=\"Casacos\"\r\n                        [items]=\"lista_de_items\"></app-categoria>\r\n                </div>\r\n            </div>\r\n            <div id=\"carrinho-container\" class=\"col mx-3\">\r\n                <div id=\"carrinho\" class=\"row\">\r\n                    <div id=\"titulo\">Seu pedido:</div>\r\n                    <div id=\"total\">R${{total}}</div>\r\n                    <table id=\"itemTable\" class=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Item</th>\r\n                                <th>QT</th>\r\n                                <th>Subtotal</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let item of carrinho;let i = index\">\r\n                                <td>{{item.tipo}}</td>\r\n                                <td>\r\n                                    <button (click)=\"changeItemValue(i,'down')\" class=\"btn btn-primary\">&#8722;</button>\r\n                                    {{item.qt}}\r\n                                    <button (click)=\"changeItemValue(i,'up')\" class=\"btn btn-primary\">&#43;</button>\r\n                                </td>\r\n                                <td>{{item.subtotal}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <div class=\"row w-25 m-3\">\r\n                        <button (click)=\"limparItens()\" class=\"btn btn-danger\">Limpar</button>\r\n                    </div>\r\n                    <div class=\"row w-25 m-3\">\r\n                        <button class=\"btn btn-primary\">Continuar</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div id=\"button-area\">\r\n            <button (click)=\"limparItens()\">Limpar</button>\r\n            <button (click)=\"gerarPDF()\">pdf</button>\r\n            <button>Continuar</button>\r\n        </div>\r\n    </div>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.5.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n</body>\r\n\r\n</html> -->","import { Injectable } from '@angular/core';\r\nimport axios from 'axios';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PedidoService {\r\n\r\n  constructor() { }\r\n\r\n  async postPedido(object: any) {\r\n    //console.log(object.carrinhos)\r\n    await axios.post('/api/usuario/add/pedido',\r\n      {\r\n\r\n        \"carrinhos\": object.carrinhos\r\n        /*\"carrinhos\": [\r\n          { \"id\": \"1\", \"quantidade\": \"2\" },\r\n          { \"id\": \"3\", \"quantidade\": \"4\" },\r\n        ],\r\n        */\r\n      }\r\n\r\n\r\n    )\r\n\r\n  }\r\n\r\n  async getRoupas() {\r\n    try {\r\n      const response = await axios.get('/api/roupa/get/roupas');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error getting roupas');\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getCategorias() {\r\n    try {\r\n      const response = await axios.get('/api/categoria/get/categorias');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error getting categorias');\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-rf012',\r\n  templateUrl: './rf012.component.html',\r\n  styleUrls: ['./rf012.component.css']\r\n})\r\nexport class Rf012Component implements OnInit{\r\n  \r\n  constructor(){}\r\n\r\n  orders = [\r\n    { number: 1, date: \"27/08/2023\", deadline: \"28/08/2023\", status: \"Em Aberto\" , recolhido: false},\r\n    { number: 2, date: \"27/08/2023\", deadline: \"28/08/2023\", status: \"Em Aberto\" , recolhido: false},\r\n    { number: 3, date: \"27/08/2023\", deadline: \"28/08/2023\", status: \"Em Aberto\" , recolhido: false},\r\n    { number: 4, date: \"27/08/2023\", deadline: \"29/08/2023\", status: \"Em Aberto\" , recolhido: false},\r\n    { number: 5, date: \"27/08/2023\", deadline: \"29/08/2023\", status: \"Em Aberto\" , recolhido: false},\r\n    { number: 6, date: \"27/08/2023\", deadline: \"29/08/2023\", status: \"Em Aberto\" , recolhido: false}\r\n  ];\r\n\r\n  ngOnInit(): void {\r\n        \r\n  }\r\n\r\n  mudarEstado(order : any): void{\r\n    order.status = \"Recolhido\";\r\n    order.recolhido = true;\r\n  }\r\n}\r\n","<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>Funcionário</title>\r\n    <style>\r\n        a:hover{\r\n            font-weight: bold;\r\n        }\r\n    </style>\r\n</head>\r\n\r\n<body>\r\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-white border-bottom mb-3\">\r\n        <div class=\"container\">\r\n            <a class=\"navbar-brand\" href=\"#\">\r\n                <img src=\"../../../assets/logoLol.png\" alt=\"Logo LOL\" width=\"100\">\r\n            </a>\r\n            <a class=\"navbar-brand\" href=\"#\">Listagem de Pedidos</a>\r\n            <div class=\"col-md-1\" id=\"sair\"><a class=\"navbar-brand\" href=\"#\">\r\n                Sair\r\n            </a></div>\r\n        </div>\r\n    </nav>\r\n\r\n<body>\r\n\r\n    <div class=\"container\">\r\n        <h1>Pedidos</h1>\r\n        <table class=\"table table-bordered table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">N°</th>\r\n                    <th scope=\"col\">Data</th>\r\n                    <th scope=\"col\">Prazo</th>\r\n                    <th scope=\"col\">Status</th>\r\n                    <th scope=\"col\" style=\"width: 60px;\">Recolhimento</th>\r\n                    <th scope=\"col\" style=\"width: 60px;\">Consulta</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody id=\"table-body\">\r\n                <tr *ngFor=\"let order of orders\">\r\n                    <th scope=\"col\">{{order.number}}</th>\r\n                    <td scope=\"col\">{{order.date}}</td>\r\n                    <td scope=\"col\">{{order.deadline}}</td>\r\n                    <td scope=\"col\" [class.recolhido]=\"order.recolhido\">{{order.status}}</td>\r\n                        <td class=\"text-center\">\r\n                            <button class=\"btn btn-warning\" (click)=\"mudarEstado(order)\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                                    class=\"bi bi-bag-check\" viewBox=\"0 0 16 16\">\r\n                                    <path fill-rule=\"evenodd\" d=\"M10.854 8.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 0 1 .708-.708L7.5 10.793l2.646-2.647a.5.5 0 0 1 .708 0z\"/>\r\n                                    <path d=\"M8 1a2.5 2.5 0 0 1 2.5 2.5V4h-5v-.5A2.5 2.5 0 0 1 8 1zm3.5 3v-.5a3.5 3.5 0 1 0-7 0V4H1v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V4h-3.5zM2 5h12v9a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V5z\"/>\r\n                                </svg>                                \r\n                            </button>\r\n                        </td>\r\n                    <td class=\"text-center\">\r\n                        <button class=\"btn btn-info\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                                class=\"bi bi-eye\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8zM1.173 8a13.133 13.133 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5c2.12 0 3.879 1.168 5.168 2.457A13.133 13.133 0 0 1 14.828 8c-.058.087-.122.183-.195.288-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5c-2.12 0-3.879-1.168-5.168-2.457A13.134 13.134 0 0 1 1.172 8z\"/>\r\n                                <path d=\"M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5zM4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0z\"/>\r\n                            </svg>\r\n                        </button>\r\n                    </td>   \r\n                </tr>            \r\n            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n    <div class=\"modal\" tabindex=\"-1\" role=\"dialog\">\r\n        <div class=\"modal-dialog\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\">Meu Modal</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Fechar\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <!-- Conteúdo do seu modal aqui -->\r\n              <p>Este é o conteúdo do meu modal.</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Fechar</button>\r\n              <!-- Outros botões ou ações aqui -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n\r\n</body>\r\n","export * from './relatorios.module';\r\nexport * from './relatorios';","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RelatoriosComponent } from './relatorios/relatorios.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RelatoriosComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class RelatoriosModule { }\r\n","import { Component, ElementRef, ViewChild, OnInit, NgModule } from '@angular/core';\r\nimport * as jsPDF from 'jspdf';\r\nimport { TopCliente } from 'src/app/shared/models/top-cliente.model';\r\nimport { RelatoriosService } from '../service/relatorios.service';\r\n\r\nexport interface ClienteRelatorio {\r\n  number: number,\r\n  nome: string,\r\n  cpf: string,\r\n  telefone: string,\r\n  email: string\r\n}\r\n\r\nexport interface Receita {\r\n  dataInicio: string,\r\n  dataFim: string,\r\n  valorTotal: number\r\n}\r\n\r\n@Component({\r\n  selector: 'app-relatorios',\r\n  templateUrl: './relatorios.component.html',\r\n  styleUrls: ['./relatorios.component.css']\r\n})\r\n\r\n\r\n\r\nexport class RelatoriosComponent {\r\n  constructor(private relatorioService: RelatoriosService) { }\r\n\r\n  mostrarListaClientes = false;\r\n  mostrarListaTopClientes = false;\r\n  mostrarReceita = false;\r\n\r\n  @ViewChild(\"dateInput2\") dateInput2: any\r\n  @ViewChild(\"dateInput1\") dateInput1: any;\r\n  clientes!: ClienteRelatorio[];\r\n  topClientes!: TopCliente[]\r\n  dataIni = ''\r\n  dataFi = ''\r\n\r\n  receita = [\r\n    {\r\n      dataInicio: this.dataIni,\r\n      dataFim: this.dataFi,\r\n      valorTotal: 546789\r\n    }\r\n  ];\r\n  /*\r\n    topClientes = [\r\n  \r\n      {\r\n        number: 1,\r\n        nome: 'João',\r\n        qtd: \"2\",\r\n        receita: \"300\"\r\n      },\r\n  \r\n      {\r\n        number: 2,\r\n        nome: 'José',\r\n        qtd: \"2\",\r\n        receita: \"300\"\r\n      },\r\n  \r\n      {\r\n        number: 3,\r\n        nome: 'Joana',\r\n        qtd: \"2\",\r\n        receita: \"300\"\r\n      }\r\n    ];\r\n  */\r\n\r\n  /* clientes = [\r\n     {\r\n       number: 1, nome: 'João',\r\n       cpf: '123.456.789-00',\r\n       telefone: '99999-9999',\r\n       email: 'example@mail.com',\r\n     },\r\n     {\r\n       number: 2,\r\n       nome: 'José',\r\n       cpf: '987.654.321-00',\r\n       telefone: '99999-8888',\r\n       email: 'joao@mail.com',\r\n     },\r\n     {\r\n       number: 3,\r\n       nome: 'Joana',\r\n       cpf: '987.654.321-00',\r\n       telefone: '99999-8888',\r\n       email: 'joao@mail.com',\r\n     },\r\n  \r\n     {\r\n       number: 4,\r\n       nome: 'Joaquina',\r\n       cpf: '987.654.321-00',\r\n       telefone: '99999-8888',\r\n       email: 'joao@mail.com',\r\n     },\r\n  \r\n   ];\r\n  */\r\n\r\n\r\n  ngOnInit(): void { }\r\n\r\n\r\n  @ViewChild('content') content: ElementRef | undefined;\r\n\r\n\r\n  async getTopCliente() {\r\n    this.gerarRelatorioClientesPDF();\r\n  }\r\n\r\n  async getCliente() {\r\n    this.clientes = await this.relatorioService.getRelatorio();\r\n  }\r\n\r\n\r\n  async gerarRelatorioPDF() {\r\n    this.clientes = await this.relatorioService.getRelatorio();\r\n    if (!this.mostrarListaClientes) {\r\n      this.mostrarListaClientes = true;\r\n\r\n      const doc = new jsPDF.default();\r\n\r\n      // Posição inicial da tabela\r\n      let startY = 10;\r\n\r\n      // Configurações da tabela\r\n      const columns = [\r\n        { title: 'ID', width: 10, x: 10 },\r\n        { title: 'Nome', width: 40, x: 20 },\r\n        { title: 'CPF', width: 40, x: 60 },\r\n        { title: 'Telefone', width: 40, x: 100 },\r\n        { title: 'E-mail', width: 60, x: 140 },\r\n      ];\r\n\r\n      // Crie a tabela manualmente\r\n      doc.setFontSize(12);\r\n      doc.text('Relatório de Clientes', 10, startY);\r\n      startY += 10;\r\n\r\n      // Desenhe o cabeçalho da tabela\r\n      columns.forEach((column) => {\r\n        doc.rect(column.x, startY, column.width, 10, 'S');\r\n        doc.text(column.title, column.x + 2, startY + 7);\r\n      });\r\n\r\n      startY += 10;\r\n\r\n      // Preencha os dados da tabela\r\n      this.clientes.forEach((cliente) => {\r\n        startY += 10;\r\n        doc.text(cliente.number.toString(), columns[0].x + 2, startY);\r\n        doc.text(cliente.nome, columns[1].x + 2, startY);\r\n        doc.text(cliente.cpf, columns[2].x + 2, startY);\r\n        doc.text(cliente.telefone, columns[3].x + 2, startY);\r\n        doc.text(cliente.email, columns[4].x + 2, startY);\r\n      });\r\n\r\n      // Salve o PDF\r\n      doc.save('relatorio_clientes.pdf');\r\n    } else {\r\n      this.mostrarListaClientes = false;\r\n    }\r\n  }\r\n\r\n  async gerarRelatorioClientesPDF() {\r\n    this.topClientes = await this.relatorioService.getTopClientes();\r\n    console.log(this.topClientes);\r\n    if (!this.mostrarListaTopClientes) {\r\n      this.mostrarListaTopClientes = true;\r\n      const doc = new jsPDF.default();\r\n\r\n      // Posição inicial da tabela\r\n      let startY = 10;\r\n\r\n      // Configurações da tabela\r\n      const columns = [\r\n        { title: 'ID', width: 10, x: 10 },\r\n        { title: 'Nome', width: 40, x: 20 },\r\n        { title: 'Total de pedidos', width: 40, x: 60 },\r\n        { title: 'Receita', width: 40, x: 100 },\r\n      ];\r\n\r\n      // Crie a tabela manualmente\r\n      doc.setFontSize(12);\r\n      doc.text('Relatório de Melhores Clientes', 10, startY);\r\n      startY += 10;\r\n\r\n      // Desenhe o cabeçalho da tabela\r\n      columns.forEach((column) => {\r\n        doc.rect(column.x, startY, column.width, 10, 'S');\r\n        doc.text(column.title, column.x + 2, startY + 7);\r\n      });\r\n\r\n      startY += 10;\r\n\r\n      // Preencha os dados da tabela\r\n      this.topClientes.forEach((cliente) => {\r\n        startY += 10;\r\n        doc.text(cliente.number.toString(), columns[0].x + 2, startY);\r\n        doc.text(cliente.nome, columns[1].x + 2, startY);\r\n        doc.text(cliente.qtd.toFixed(), columns[2].x + 2, startY);\r\n        doc.text(cliente.receita.toFixed(), columns[3].x + 2, startY);\r\n      });\r\n\r\n      // Salve o PDF\r\n      doc.save('relatorio_top_clientes.pdf');\r\n    } else {\r\n      this.mostrarListaTopClientes = false;\r\n    }\r\n  }\r\n\r\n  private dataVazia(data: string) {\r\n    return data == \"\" || data == undefined || data == null || data.length == 0\r\n  }\r\n\r\n  async gerarRelatorioReceita() {\r\n    let total = await this.relatorioService.getReceita(this.dateInput1.nativeElement.value, this.dateInput2.nativeElement.value);\r\n    if (!this.mostrarReceita) {\r\n      this.mostrarReceita = true;\r\n      const doc = new jsPDF.default();\r\n\r\n      let startY = 10;\r\n\r\n      const columns = [\r\n        { title: 'Data Inicío', width: 40, x: 10 },\r\n        { title: 'Data Final', width: 40, x: 50 },\r\n        { title: 'Receita total', width: 40, x: 90 },\r\n      ];\r\n\r\n      doc.setFontSize(12);\r\n      doc.text('Relatório de Receita', 10, startY);\r\n      startY += 10;\r\n\r\n      columns.forEach((column) => {\r\n        doc.rect(column.x, startY, column.width, 10, 'S');\r\n        doc.text(column.title, column.x + 2, startY + 7);\r\n      });\r\n\r\n      startY += 10;\r\n\r\n      // Preencha os dados da tabela\r\n      this.receita.forEach((row) => {\r\n\r\n        startY += 10;\r\n        let date1 = !this.dataVazia(this.dateInput1.nativeElement.value) ? new Date(this.dateInput1.nativeElement.value).toLocaleDateString('pt-br', { timeZone: 'UTC' })\r\n          : \"Período completo\";\r\n        let date2 = !this.dataVazia(this.dateInput2.nativeElement.value) ? new Date(this.dateInput2.nativeElement.value).toLocaleDateString('pt-br', { timeZone: 'UTC' })\r\n          : \"Período completo\";\r\n\r\n        doc.text(date1, columns[0].x + 2, startY);\r\n        doc.text(date2, columns[1].x + 2, startY);\r\n        doc.text(total.toString(), columns[2].x + 2, startY);\r\n      });\r\n\r\n      // Salve o PDF\r\n      doc.save('relatorio_receita.pdf');\r\n    } else {\r\n      this.mostrarListaTopClientes = false;\r\n    }\r\n  }\r\n}\r\n","<!-- <div class=\"container text-center\">\r\n    <ul class=\"list-group list-group-horizontal-xxl m-3\">\r\n      <li class=\"list-group-item list-group-item-info m-3\">\r\n        <label for=\"client-list\">Lista de clientes </label>\r\n        <button class=\"btn btn-info\" (click)=\"gerarRelatorioPDF()\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            fill=\"currentColor\"\r\n            class=\"bi bi-printer\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n            <path\r\n              d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"\r\n            />\r\n          </svg>\r\n        </button>\r\n      </li>\r\n      <li class=\"list-group-item list-group-item-warning m-3\" >\r\n        <label for=\"top-clientes\">Top clientes </label>\r\n        <button class=\"btn btn-warning\" (click)=\"gerarRelatorioClientesPDF()\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            fill=\"currentColor\"\r\n            class=\"bi bi-printer\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n            <path\r\n              d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"\r\n            />\r\n          </svg>\r\n        </button>\r\n      </li>\r\n      <li class=\"list-group-item list-group-item-danger d-flex justify-content-evenly m-3\">\r\n        <label for=\"receita\">Receita </label>\r\n      \r\n          <button class=\"btn btn-danger\" (click)=\"gerarRelatorioReceita()\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              fill=\"currentColor\"\r\n              class=\"bi bi-printer\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n              <path\r\n                d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n          <label >Data Início</label>\r\n          <input  #dateInput1 (ngModel)='dataIni' type=\"date\">\r\n          <label for=\"\">Data Fim</label>\r\n          <input  #dateInput2 (ngModel)='dataFi'type=\"date\">\r\n        \r\n        </li>\r\n       \r\n       \r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"container\">\r\n\r\n  <div *ngIf=\"\" class=\"container\">\r\n      #content\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Nome</th>\r\n          <th>CPF</th>\r\n          <th>Telefone</th>\r\n          <th>E-mail</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let cliente of clientes\">\r\n          <th>{{ cliente.number }}</th>\r\n          <td>{{ cliente.nome }}</td>\r\n          <td>{{ cliente.cpf }}</td>\r\n          <td>{{ cliente.telefone }}</td>\r\n          <td>{{ cliente.email }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <table\r\n      *ngIf=\"mostrarListaTopClientes\"\r\n      #content\r\n      class=\"table table-striped table-bordered\"\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Nome</th>\r\n          <th>Total de pedidos</th>\r\n          <th>Receita</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let cliente of topClientes\">\r\n          <th>{{ cliente.number }}</th>\r\n          <td>{{ cliente.nome }}</td>\r\n          <td>{{ cliente.qtd}}</td>\r\n          <td>R${{ cliente.receita }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <table\r\n      *ngIf=\"mostrarReceita\"\r\n      #content\r\n      class=\"table table-striped table-bordered\"\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <th>Data Início</th>\r\n          <th>Data Fim</th>\r\n          <th>Valor total</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let row of receita\">\r\n          <th>{{ dateInput1.value}}</th>\r\n          <td>{{ dateInput2.value }}</td>\r\n          <td>{{ row.valorTotal }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n   -->\r\n\r\n<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <title>Relatórios</title>\r\n</head>\r\n\r\n<body>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col\">\r\n        <h1 id=\"titulo\">Relatórios</h1>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col w-25 m-3\">\r\n        <div class=\"card p-3\" id=\"card\">\r\n          <h4 class=\"mb-4\"> Lista de Clientes </h4>\r\n          <button class=\"btn btn-info\" (click)=\"gerarRelatorioPDF()\">\r\n            Imprimir <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n              class=\"bi bi-printer\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n              <path\r\n                d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col w-25 m-3\">\r\n        <div class=\"card p-3\" id=\"card\">\r\n          <h4 class=\"mb-4\">Top Clientes</h4>\r\n          <button class=\"btn btn-warning\" (click)=\"this.getTopCliente()\">\r\n            Imprimir <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n              class=\"bi bi-printer\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n              <path\r\n                d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col w-25 m-3\">\r\n        <div class=\"card p-3\" id=\"card\">\r\n          <h4 class=\"mb-3\">Receita</h4>\r\n          <label>Data Início</label>\r\n          <input class=\"mb-3 form-control inputlol\" #dateInput1 (ngModel)='dataIni' type=\"date\">\r\n          <label>Data Fim</label>\r\n          <input class=\"mb-3 form-control inputlol\" #dateInput2 (ngModel)='dataFi' type=\"date\">\r\n          <button class=\"btn btn-danger\" (click)=\"gerarRelatorioReceita()\">\r\n            Imprimir <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n              class=\"bi bi-printer\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M2.5 8a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1z\" />\r\n              <path\r\n                d=\"M5 1a2 2 0 0 0-2 2v2H2a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h1v1a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2v-1h1a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-1V3a2 2 0 0 0-2-2H5zM4 3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2H4V3zm1 5a2 2 0 0 0-2 2v1H2a1 1 0 0 1-1-1V7a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-1v-1a2 2 0 0 0-2-2H5zm7 2v3a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1z\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n\r\n      <div *ngIf=\"\" class=\"container\">\r\n        <table *ngIf=\"mostrarListaClientes\" #content class=\"table table-striped table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Nome</th>\r\n              <th>CPF</th>\r\n              <th>Telefone</th>\r\n              <th>E-mail</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let cliente of clientes\">\r\n              <th>{{ cliente.number }}</th>\r\n              <td>{{ cliente.nome }}</td>\r\n              <td>{{ cliente.cpf }}</td>\r\n              <td>{{ cliente.telefone }}</td>\r\n              <td>{{ cliente.email }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <table *ngIf=\"mostrarListaTopClientes\" #content class=\"table table-striped table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Nome</th>\r\n              <th>Total de pedidos</th>\r\n              <th>Receita</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let cliente of topClientes\">\r\n              <th>{{ cliente.number }}</th>\r\n              <td>{{ cliente.nome }}</td>\r\n              <td>{{ cliente.qtd}}</td>\r\n              <td>R${{ cliente.receita }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <table *ngIf=\"mostrarReceita\" #content class=\"table table-striped table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Data Início</th>\r\n              <th>Data Fim</th>\r\n              <th>Valor total</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let row of receita\">\r\n              <th>{{ dateInput1.value}}</th>\r\n              <td>{{ dateInput2.value }}</td>\r\n              <td>{{ row.valorTotal }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</body>\r\n\r\n</html>","//import jsPDF\nimport { Injectable } from '@angular/core';\nimport { RequestMaker } from 'src/app/services/requestService';\nimport { ClienteRelatorio } from '../relatorios';\nimport { TopCliente } from 'src/app/shared/models/top-cliente.model';\nimport { Cadastro } from 'src/app/shared';\nimport { underline } from 'pdfkit';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RelatoriosService {\n  constructor() { }\n\n\n  async getRelatorio(): Promise<ClienteRelatorio[]> {\n    let response = await RequestMaker.getData<Cadastro[]>(\"/cadastro/get/clientes\");\n    let clientes: ClienteRelatorio[] = [];\n    if (response.ok(response.data)) {\n      response.data.forEach((cadastro, index) => {\n        let cliente: ClienteRelatorio = {\n          \"cpf\": cadastro.cpf,\n          \"email\": cadastro.email,\n          \"nome\": cadastro.nome,\n          \"number\": index,\n          \"telefone\": cadastro.telefone\n        }\n        clientes.push(cliente);\n      })\n      return clientes;\n    } else {\n      return clientes;\n    }\n  }\n\n  async getTopClientes(): Promise<TopCliente[]> {\n    let response = await RequestMaker.getData<TopCliente[]>(\"/cadastro/get/topcadastros\");\n    if (response.ok(response.data)) {\n      return response.data;\n    } else {\n      console.log(response.data);\n      return [];\n    }\n  }\n\n  async getReceita(data1: string, data2: string): Promise<number> {\n    let response;\n    if (this.dataVazia(data1) && this.dataVazia(data2)) {\n      response = await RequestMaker.getData<number>(\"/pedido/get/receita\");\n    } else if (this.dataVazia(data1)) {\n      response = await RequestMaker.getData<number>(\"/pedido/get/receita?dataFinal=\" + data2);\n    } else if (this.dataVazia(data2)) {\n      response = await RequestMaker.getData<number>(\"/pedido/get/receita?dataInicial=\" + data1);\n    } else {\n      response = await RequestMaker.getData<number>(\"/pedido/get/receita?dataInicial=\" + data1 + \"&dataFinal=\" + data2);\n    }\n    console.log(response);\n    if (response.ok(response.data)) {\n      return response.data;\n    } else {\n      return 0;\n    }\n  }\n  private dataVazia(data: string) {\n    return data == \"\" || data == undefined || data == null || data.length == 0\n  }\n\n}\n\n\n\n\n","\r\nimport { environment } from \"../environment/environment\";\r\nimport axios from \"axios\";\r\nimport { Erro } from \"../shared/models/erro.model\";\r\n\r\nexport abstract class RequestMaker {\r\n\r\n    static baseUrl = \"\";\r\n\r\n    public static async getData<T>(url: string): Promise<RequestResult<T>> {\r\n        return this.baseFunction(url, null, \"get\");\r\n    }\r\n\r\n    public static async postData<T>(url: string, body: any): Promise<RequestResult<T>> {\r\n        return this.baseFunction(url, body, \"post\");\r\n    }\r\n\r\n\r\n    private static async baseFunction<T>(url: string, body: any, type: string): Promise<RequestResult<T>> {\r\n        url = this.checkUrl(url);\r\n        if (this.baseUrl == \"\") {\r\n            return await this.getCurrentUrl()\r\n                .then(\r\n                    async () => {\r\n                        if (this.baseUrl != \"\") return await this.baseFunction<T>(url, body, type);\r\n                        else throw new Error('Não foi possivel se conectar com o backend!');// ex return new RequestResult<T>(0, getPathError());\r\n                    })\r\n                .catch(() => { throw new Error('Não foi possivel se conectar com o backend!') })//new RequestResult<T>(0, null, null))\r\n        }\r\n        let response = type == \"get\" ? axios.get(this.baseUrl + url) : axios.post(this.baseUrl + url, body);\r\n        let result = await response\r\n            .then((response) => new RequestResult<T>(response.status, response.data))\r\n            .catch((error) => this.handleError<T>(error));\r\n        return result;\r\n    }\r\n\r\n    private static checkUrl(url: string) {\r\n        // Permite requisições urls /exemplo ou exemplo\r\n        if (!url.endsWith(\"/\")) {\r\n            url.concat(\"/\");\r\n        }\r\n        return url;\r\n    }\r\n\r\n    private static async handleError<T>(error: any) {\r\n        if (axios.isAxiosError(error)) {\r\n            // Ocorre quando o status code é diferente de 2xx\r\n            if (error.response) {\r\n                return new RequestResult<T>(error.response.status, error.response.data)\r\n            } else {\r\n                throw new Error('Erro ao receber dados do backend!');\r\n                //new RequestResult<T>(0, null, null);\r\n            }\r\n        }\r\n        throw new Error('Erro desconhecido!');\r\n    }\r\n    // Função para descobrir qual o domain disponível do backend\r\n    private static async getCurrentUrl() {\r\n        await axios.get(environment.API_URL + \"/\")\r\n            .then(() => { this.baseUrl = environment.API_URL })\r\n            .catch(async (error) => {\r\n                if (error.request) {\r\n                    await axios.get(environment.SECONDARY_API_URL + \"/\").then(() => {\r\n                        this.baseUrl = environment.SECONDARY_API_URL;\r\n                    }).catch(() => this.baseUrl = \"\")\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport class RequestResult<T>{\r\n\r\n    status: number;\r\n    data: T | Erro;\r\n\r\n\r\n    public ok(data: T | Erro): data is T {\r\n        return (data as Erro).error === undefined;\r\n    }\r\n\r\n    public constructor(status: number, data: T | Erro) {\r\n        this.status = status;\r\n        this.data = data;\r\n    }\r\n}","export * from './numerico.directive';\r\nexport * from './string-only.directive';\r\nexport * from './obrigatorio.directive';\r\nexport * from './minimo-validator.directive';","import { Directive, Input, OnInit } from '@angular/core';\r\nimport { Validator, NG_VALIDATORS, FormControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[minimoValidator]',\r\n  providers: [{\r\n    provide: NG_VALIDATORS,\r\n    useExisting: MinimoValidatorDirective,\r\n    multi: true\r\n  }]\r\n\r\n})\r\nexport class MinimoValidatorDirective implements Validator, OnInit{\r\n\r\n  @Input(\"valorMinimo\") valorMinimo: string = \"0\";\r\n\r\n  constructor() { }\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n  validate(c: FormControl){\r\n    let firstValue = c.value;\r\n\r\n    if(firstValue && firstValue.trim() !== ''){\r\n      let v: number = +firstValue;\r\n      if(isNaN(v)){\r\n        return { 'minimo':true, 'requiredValue': +this.valorMinimo}\r\n      }\r\n      if (v< +this.valorMinimo){\r\n        return {'minimo':true, 'requiredValue': +this.valorMinimo}\r\n      }    \r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","import { Directive, HostListener, ElementRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[numerico]',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: NumericoDirective,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class NumericoDirective implements ControlValueAccessor {\r\n  constructor(private el: ElementRef) {}\r\n\r\n  onChange: any;\r\n  onTouched: any;\r\n\r\n  @HostListener('input', ['$event.target.value'])\r\n  onInput(value: any): void {\r\n    const numericValue = value.replace(/[\\D]/g, '');\r\n    this.el.nativeElement.value = numericValue;\r\n    this.onChange(numericValue);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n  writeValue(value: any): void {\r\n    if (value !== undefined) {\r\n      this.el.nativeElement.value = value;\r\n    }\r\n  }\r\n}\r\n","import { Directive } from '@angular/core';\r\nimport { Validator, NG_VALIDATORS, FormControl, ValidationErrors } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[obrigatorio]',\r\n  providers: [{\r\n    provide:NG_VALIDATORS,\r\n    useExisting: ObrigatorioDirective,\r\n    multi: true\r\n  }]\r\n})\r\nexport class ObrigatorioDirective implements Validator{\r\n\r\n  constructor() { }\r\n\r\n  validate(control: FormControl): ValidationErrors | null {\r\n    if(!control.value){\r\n      return {'obrigatorio':true}\r\n    }\r\n    return null\r\n  }; \r\n\r\n}\r\n","import { Directive, ElementRef, HostListener} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\n\r\n\r\nimport { Input, OnInit } from '@angular/core';\r\nimport { Validator, NG_VALIDATORS, FormControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[stringOnly]',\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: StringOnlyDirective,\r\n    multi: true\r\n  },{\r\n    provide: NG_VALIDATORS,\r\n    useExisting: StringOnlyDirective,\r\n    multi: true\r\n  }\r\n]\r\n})\r\nexport class StringOnlyDirective implements ControlValueAccessor, Validator{\r\n\r\n  @Input(\"maxLength\") maxLength : string = '255';\r\n\r\n  constructor(private el : ElementRef) { }\r\n\r\n  onChange : any;\r\n  onTouched : any;\r\n\r\n@HostListener('input', ['$event.target.value'])\r\n  onInput(value: any): void {\r\n    \r\n    const newValue = value.replace(/[^\\p{L}\\s'-]/gu,'');\r\n    this.el.nativeElement.value = newValue;\r\n    this.onChange(newValue);\r\n  }\r\n\r\n  registerOnChange(fn : any) : void {\r\n    this.onChange = fn;\r\n  }\r\n  registerOnTouched(fn : any) : void{\r\n    this.onTouched = fn;\r\n  }\r\n  writeValue(value: any): void {\r\n    if (value !== undefined) {\r\n      this.el.nativeElement.value = value;\r\n    }\r\n  }\r\n\r\n  validate(c : FormControl){\r\n    if(c.value !== null && c.value !== undefined){\r\n      let length : number = +c.value.length;\r\n      if(length > +this.maxLength){\r\n        return { 'maximo':true, 'requiredValue': +this.maxLength}\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","export * from './models';\r\nexport * from './shared.module';","import { Endereco } from \"./endereco.model\";\r\n\r\n\r\nexport class Cadastro {\r\n    constructor(\r\n        public nome: string,\r\n        public cpf: string,\r\n        public telefone: string,\r\n        public email: string,\r\n        public perfil: string,\r\n        public senha: string,\r\n        public dataNasc: string,\r\n        public endereco: Endereco) {\r\n    }\r\n\r\n}\r\n","export class Endereco {\r\n    constructor(\r\n        public cep: string,\r\n        public cidade: string,\r\n        public endereco: string,\r\n        public numero: string,\r\n        public complemento: string\r\n    ) { }\r\n}\r\n","export class Erro {\r\n\r\n    timestamp!: string;\r\n    status!: number\r\n    error!: string\r\n    message!: string\r\n    path!: string\r\n\r\n    constructor(timestamp: string, status: number, error: string, message: string, path: string) {\r\n        this.timestamp = timestamp;\r\n        this.status = status;\r\n        this.error = error;\r\n        this.message = message;\r\n        this.path = path;\r\n    }\r\n}\r\n","export class FormularioData {\r\n    /*\r\n    public cep?: string\r\n    public cidade?: string\r\n    public complemento?: string\r\n    public cpf?: string\r\n    public email?: string\r\n    public endereco?: string\r\n    public nome?: string\r\n    public numero?: string\r\n    public telefone?: string\r\n    */\r\n    constructor(public cep: string,\r\n        public cidade: string,\r\n        public complemento: string,\r\n        public cpf: string,\r\n        public email: string,\r\n        public endereco: string,\r\n        public nome: string,\r\n        public numero: string,\r\n        public telefone: string,\r\n        public dataNasc: string\r\n    ) {\r\n\r\n    }\r\n}\r\n","import { underline } from \"pdfkit\";\r\nimport { Endereco } from \"./endereco.model\";\r\n\r\nexport class Funcionario {\r\n\r\n    constructor(\r\n        public cpf: string,\r\n        public nome: string,\r\n        public dataNasc: string,\r\n        public email: string,\r\n        public senha: string,\r\n        public endereco: Endereco,\r\n        public telefone: string,\r\n    ) {\r\n        this.ajustarDataNasc();\r\n    }\r\n\r\n    private ajustarDataNasc() {\r\n        if (this.dataNasc != null && this.dataNasc != undefined) {\r\n            let dia = this.dataNasc.slice(0, 2);\r\n            let mes = this.dataNasc.slice(2, 4);\r\n            let ano = this.dataNasc.slice(4, 8);\r\n            this.dataNasc = [ano, mes, dia].join('-');\r\n        }\r\n    }\r\n}\r\n","export * from './usuario.model';\r\nexport * from './pedido.model';\r\nexport * from './roupa.model';\r\nexport * from './login.model';\r\nexport * from './erro.model';\r\nexport * from './endereco.model';\r\nexport * from './cadastro.model';\r\nexport * from './formulario-data.model';\r\n","export class Login {\r\n    login: string;\r\n    password: string;\r\n    constructor(login: string, password: string) {\r\n        this.login = login;\r\n        this.password = password;\r\n    }\r\n}\r\n","import { Cadastro } from \"./cadastro.model\";\r\nimport { Item } from \"./item.model\";\r\n\r\nexport class Pedido {\r\n\r\n    constructor(\r\n        public numero?: number,\r\n        public roupas?: Item[],\r\n        public total?: number,\r\n        public data?: string,\r\n        public prazo?: string,\r\n        public status?: string,\r\n        public cadastro?: Cadastro\r\n    ) { }\r\n}\r\n","export class RoupaDTO {\n    constructor(\n        public valor: number,\n        public tempoDeLavagem: number,\n        public numeroCategoria: string,\n        public descricao: String\n    ) {\n\n    }\n}\n","export class Roupa {\r\n    constructor(\r\n        public numero: number,\r\n        public descricao: string,\r\n        public valor: number,\r\n        public numeroCategoria: string,\r\n        public categoria: string,\r\n        public tempoDeLavagem: number\r\n    ) { }\r\n\r\n    static getNumberAsString(numero: number) {\r\n        let number = numero.toString();\r\n        while (number.length < 4) {\r\n            number = \"0\" + number;\r\n        }\r\n        return number;\r\n    }\r\n}\r\n","import { Endereco } from \"./endereco.model\";\n\nexport class UserDTO {\n    constructor(public nome: string,\n        public cpf: string,\n        public telefone: string,\n        public email: string,\n        public dataNasc: string,\n        public endereco: Endereco\n    ) {\n    }\n\n}\n","export class Usuario {\r\n\r\n    id!: number\r\n    login!: string\r\n    nome!: string\r\n    perfil!: string\r\n    senha!: string\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from \"@angular/core\"\r\n\r\n\r\n@Pipe({\r\n    standalone: true,\r\n    name: \"format\"\r\n})\r\n\r\nexport class Format implements PipeTransform {\r\n    transform(value: string | undefined, ...args: any[]): string {\r\n        if (value != undefined) {\r\n            const parts = value.split('-');\r\n            const dateObject = new Date(+parts[0], +parts[1] - 1, +parts[2]);\r\n            const dataFormatada = `${dateObject.getDate()}/${dateObject.getMonth() + 1}/${dateObject.getFullYear()}`;\r\n            return dataFormatada;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MinimoValidatorDirective, NumericoDirective, ObrigatorioDirective, StringOnlyDirective } from './directives';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NumericoDirective,\r\n    StringOnlyDirective,\r\n    ObrigatorioDirective,\r\n    MinimoValidatorDirective\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    NumericoDirective,\r\n    StringOnlyDirective,\r\n    ObrigatorioDirective,\r\n    MinimoValidatorDirective\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","/// <reference types=\"@angular/localize\" />\r\n\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nimport { provideEnvironmentNgxMask } from 'ngx-mask';\r\n\r\nlet ngxEnviroment = [provideEnvironmentNgxMask()];\r\nplatformBrowserDynamic().bootstrapModule(AppModule, {\r\n  providers: [ngxEnviroment]\r\n})\r\n  .catch(err => console.error(err));\r\n"],"names":["RouterModule","ListagemComponent","AutocadastroComponent","ConsultaPedidoComponent","LoginComponent","OrcamentoComponent","PagamentoComponent","PaginaInicialComponent","ListarPedidosAbertosComponent","PedidoComponent","ListarRoupasComponent","InserirRoupaComponent","EditarRoupaComponent","Rf012Component","ListagemFComponent","EditarFuncionarioComponent","InserirFuncionarioComponent","ListarFuncionarioComponent","AuthGuard","RelatoriosComponent","routes","path","redirectTo","pathMatch","component","canActivate","data","role","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AppComponent_nav_7_ul_15_Template_a_click_2_listener","ɵɵrestoreView","_r13","ctx_r12","ɵɵnextContext","ɵɵresetView","logout","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ctx_r11","user","nome","ɵɵtemplate","AppComponent_nav_7_li_5_Template","AppComponent_nav_7_li_6_Template","AppComponent_nav_7_li_7_Template","AppComponent_nav_7_li_8_Template","AppComponent_nav_7_li_9_Template","AppComponent_nav_7_li_10_Template","AppComponent_nav_7_li_11_Template","AppComponent_nav_7_li_12_Template","AppComponent_nav_7_li_13_Template","AppComponent_nav_7_li_14_Template","AppComponent_nav_7_ul_15_Template","ɵɵproperty","ctx_r0","perfil","loginService","getUsuario","AppComponent","constructor","router","ref","isChecked","title","ngOnInit","console","log","isLogged","checkIfLogged","refresh","window","location","reload","ɵɵdirectiveInject","Router","i2","LoginService","ChangeDetectorRef","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_nav_7_Template","usuarioLogado","AppModule","BrowserModule","AutocadastroModule","ConsultaPedidoModule","OrcamentoModule","PagamentoModule","PaginaInicialModule","PedidoModule","CrudRoupasModule","ListagemModule","CommonModule","FuncionarioModule","FormsModule","NgxMaskDirective","NgxMaskPipe","provideNgxMask","AuthModule","RelatoriosModule","bootstrap","declarations","route","state","url","indexOf","navigate","queryParams","error","ɵɵinject","factory","ɵfac","providedIn","ReactiveFormsModule","LoginModule","Login","ɵɵtextInterpolate","ctx_r1","mensagem","_r2","errors","_r4","app","erro","value","getCurrentNavigation","extras","undefined","pegarDadosFormulario","formulario","form","valid","dados","login","username","password","setErro","valor","i3","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_15_listener","_r6","_r0","ɵɵreference","LoginComponent_div_17_Template","LoginComponent_Template_input_focus_21_listener","LoginComponent_div_23_Template","LoginComponent_Template_input_focus_27_listener","LoginComponent_div_29_Template","dirty","touched","RequestMaker","loginComponent","_this","_asyncToGenerator","toLowerCase","response","postData","ok","usuario","localStorage","JSON","stringify","navigateAfterLogin","_this2","procurarNoLocalStorage","getData","LS_CHAVE","result","parse","clear","AutoCadastroService","_r1","_r3","_r5","autoCadastroService","teste","requestCep","cep","replace","getCep","then","cidade","localidade","endereco","logradouro","complemento","realizarCadastro","validadeFormulario","postUser","viewQuery","AutocadastroComponent_Query","AutocadastroComponent_Template_form_ngSubmit_15_listener","_r7","AutocadastroComponent_div_24_Template","AutocadastroComponent_div_31_Template","AutocadastroComponent_div_37_Template","AutocadastroComponent_Template_button_click_52_listener","AutocadastroComponent_Template_input_ngModelChange_54_listener","$event","AutocadastroComponent_Template_input_ngModelChange_58_listener","AutocadastroComponent_Template_input_ngModelChange_62_listener","AutocadastroComponent_Template_input_ngModelChange_71_listener","axios","Endereco","UserDTO","get","headers","validateTel","tel","length","telefone","dataNasc","numero","cpf","email","confirm","alert","ConsultaPedidoService","Format","roupa_r4","descricao","quantidade","ConsultaPedidoComponent_div_14_tr_45_Template","ctx_r2","pedido","prazo","total","status","roupas","ɵɵpureFunction0","_c0","consultaPedidoService","vazio","buscarPorPedido","getRoupas","ConsultaPedidoComponent_Template","ConsultaPedidoComponent_Template_button_click_10_listener","ConsultaPedidoComponent_p_13_Template","ConsultaPedidoComponent_div_14_Template","listarTodosPedidos","pedidos","inserirPedido","push","numeroPedido","find","atualizarPedido","forEach","obj","index","objs","removerPedido","filter","SharedModule","CrudRoupasService","categoria_r9","roupaService","categorias","getCategorias","id","snapshot","params","roupa","buscarPorId","Error","atualizar","ActivatedRoute","EditarRoupaComponent_Query","EditarRoupaComponent_Template_form_ngSubmit_4_listener","_r10","EditarRoupaComponent_Template_input_ngModelChange_9_listener","EditarRoupaComponent_div_11_Template","EditarRoupaComponent_Template_input_ngModelChange_15_listener","EditarRoupaComponent_div_17_Template","EditarRoupaComponent_Template_input_ngModelChange_21_listener","tempoDeLavagem","EditarRoupaComponent_div_23_Template","EditarRoupaComponent_option_29_Template","categoria","_c1","Roupa","RoupaDTO","inserir","preco","formRoupa","InserirRoupaComponent_Query","InserirRoupaComponent_Template_form_ngSubmit_4_listener","InserirRoupaComponent_div_11_Template","InserirRoupaComponent_div_17_Template","InserirRoupaComponent_div_23_Template","InserirRoupaComponent_option_29_Template","ListarRoupasComponent_tr_16_Template_a_click_11_listener","restoredCtx","roupa_r2","$implicit","ctx_r3","remover","ɵɵpureFunction1","preventDefault","getNumberAsString","ListarRoupasComponent_Template","ListarRoupasComponent_tr_16_Template","ListarRoupasComponent_p_17_Template","listarTodos","ajustarId","idString","toString","numeroCategoria","string","environment","prodution","API_URL","SECONDARY_API_URL","Funcionario","_r9","_r11","funcService","funcionario","buscarFuncionarioPorCPF","senha","atualizarFuncionario","siafi","catch","menssage","FuncionarioService","EditarFuncionarioComponent_Query","EditarFuncionarioComponent_Template_input_ngModelChange_9_listener","EditarFuncionarioComponent_div_11_Template","EditarFuncionarioComponent_Template_input_ngModelChange_15_listener","EditarFuncionarioComponent_div_17_Template","EditarFuncionarioComponent_Template_input_ngModelChange_21_listener","EditarFuncionarioComponent_div_23_Template","EditarFuncionarioComponent_Template_input_ngModelChange_27_listener","EditarFuncionarioComponent_div_29_Template","EditarFuncionarioComponent_Template_input_ngModelChange_33_listener","EditarFuncionarioComponent_div_35_Template","EditarFuncionarioComponent_Template_input_ngModelChange_39_listener","EditarFuncionarioComponent_div_41_Template","EditarFuncionarioComponent_Template_button_click_46_listener","EditarFuncionarioComponent_Template_input_ngModelChange_48_listener","EditarFuncionarioComponent_Template_input_ngModelChange_52_listener","EditarFuncionarioComponent_Template_input_ngModelChange_56_listener","EditarFuncionarioComponent_Template_input_ngModelChange_61_listener","EditarFuncionarioComponent_Template_input_ngModelChange_65_listener","EditarFuncionarioComponent_Template_button_click_67_listener","_r15","_r17","_r19","inserirFuncionario","formFuncionario","InserirFuncionarioComponent_Query","InserirFuncionarioComponent_Template_form_ngSubmit_4_listener","_r22","InserirFuncionarioComponent_div_11_Template","InserirFuncionarioComponent_div_17_Template","InserirFuncionarioComponent_div_23_Template","InserirFuncionarioComponent_div_29_Template","InserirFuncionarioComponent_div_35_Template","InserirFuncionarioComponent_div_41_Template","InserirFuncionarioComponent_Template_button_click_45_listener","InserirFuncionarioComponent_div_49_Template","InserirFuncionarioComponent_div_54_Template","InserirFuncionarioComponent_div_59_Template","InserirFuncionarioComponent_div_64_Template","ListarFuncionarioComponent_tr_20_Template_a_click_16_listener","funcionario_r2","removerFuncionario","ɵɵpipeBind2","funcionarios","getFuncionarios","resultado","listarFuncionarios","ListarFuncionarioComponent_Template","ListarFuncionarioComponent_tr_20_Template","ListarFuncionarioComponent_p_21_Template","Cadastro","func","cadastro","ListagemFModule","pedido_r1","ListagemFComponent_ng_container_41_button_23_Template_button_click_0_listener","ctx_r17","confirmarLavagem","ListagemFComponent_ng_container_41_button_24_Template_button_click_0_listener","ctx_r20","confirmarRecolhimento","ListagemFComponent_ng_container_41_button_25_Template_button_click_0_listener","_r25","ctx_r23","finalizarPedido","ɵɵelementContainerStart","ListagemFComponent_ng_container_41_button_16_Template","ListagemFComponent_ng_container_41_button_17_Template","ListagemFComponent_ng_container_41_button_18_Template","ListagemFComponent_ng_container_41_button_19_Template","ListagemFComponent_ng_container_41_button_20_Template","ListagemFComponent_ng_container_41_button_21_Template","ListagemFComponent_ng_container_41_button_23_Template","ListagemFComponent_ng_container_41_button_24_Template","ListagemFComponent_ng_container_41_button_25_Template","ɵɵelementContainerEnd","estado_pedido","carregarDadosDoServidor","onDateInputChange","estado","dataIni","dataFi","ListagemFComponent_Template","ListagemFComponent_Template_input_ngModelChange_17_listener","ListagemFComponent_Template_input_ngModelChange_20_listener","ListagemFComponent_ng_container_41_Template","NgSwitch","pedido_r2","ListagemComponent_tr_30_button_24_Template_button_click_0_listener","_r26","ctx_r24","alterarStatus","ListagemComponent_tr_30_button_12_Template","ListagemComponent_tr_30_button_13_Template","ListagemComponent_tr_30_button_14_Template","ListagemComponent_tr_30_button_15_Template","ListagemComponent_tr_30_button_16_Template","ListagemComponent_tr_30_button_17_Template","ListagemComponent_tr_30_button_18_Template","ListagemComponent_tr_30_button_19_Template","ListagemComponent_tr_30_a_21_Template","ListagemComponent_tr_30_button_22_Template","ListagemComponent_tr_30_button_24_Template","ListagemComponent_tr_30_button_25_Template","tmp_1_0","toFixed","toUpperCase","markForCheck","mudarEstadoPedidoFiltro","target","ListagemComponent_Template","ListagemComponent_tr_30_Template","ListagemComponent_p_31_Template","OrcamentoService","OrcamentoComponent_tr_33_Template_button_click_7_listener","aprovar","OrcamentoComponent_tr_33_Template_button_click_9_listener","ctx_r5","rejeitar","orcamentoService","getPedidos","_this3","filtrar","_this4","OrcamentoComponent_Template","OrcamentoComponent_Template_img_click_21_listener","OrcamentoComponent_tr_33_Template","PagamentoService","roupa_r1","pagamentoService","pagar","PagamentoComponent_Template","PagamentoComponent_tr_45_Template","PagamentoComponent_Template_button_click_46_listener","ListarPedidosAbertosComponent_ng_container_22_ng_container_1_button_15_Template","ListarPedidosAbertosComponent_ng_container_22_ng_container_1_button_16_Template","ListarPedidosAbertosComponent_ng_container_22_ng_container_1_button_17_Template","ListarPedidosAbertosComponent_ng_container_22_ng_container_1_button_18_Template","ListarPedidosAbertosComponent_ng_container_22_ng_container_1_button_19_Template","ListarPedidosAbertosComponent_ng_container_22_ng_container_1_button_20_Template","ListarPedidosAbertosComponent_ng_container_22_ng_container_1_Template","ListarPedidosAbertosComponent_Template","ListarPedidosAbertosComponent_ng_container_22_Template","ListarPedidosAbertosComponent_p_23_Template","PaginaInicialFuncionarioService","PaginaInicialFuncionarioModule","PaginaInicialComponent_tr_30_Template_button_click_14_listener","PaginaInicialComponent_Template","PaginaInicialComponent_tr_30_Template","PaginaInicialComponent_p_31_Template","PaginaInicialService","EventEmitter","CategoriaComponent_button_5_Template_button_click_0_listener","switch","CategoriaComponent_button_6_Template_button_click_0_listener","CategoriaComponent_ng_container_7_div_1_Template_button_click_5_listener","_r12","item_r7","ctx_r10","adicionar","CategoriaComponent_ng_container_7_div_1_Template","ativo","CategoriaComponent","items","addClick","item","emit","inputs","outputs","CategoriaComponent_Template","CategoriaComponent_button_5_Template","CategoriaComponent_button_6_Template","CategoriaComponent_ng_container_7_Template","HeaderComponent","HeaderComponent_Template","numPedido","ɵɵtextInterpolate2","roupa_r7","ModalPedidoComponent_div_15_Template_button_click_1_listener","ctx_r8","ModalPedidoComponent_div_15_Template_button_click_4_listener","ModalPedidoComponent_div_16_Template_button_click_1_listener","sair","ModalPedidoComponent","activeModal","showLink","aprovado","rejeitado","Math","ceil","random","close","NgbActiveModal","orcamento","prazoMax","listaRoupasPedido","ModalPedidoComponent_Template","ModalPedidoComponent_h4_1_Template","ModalPedidoComponent_h4_2_Template","ModalPedidoComponent_h4_3_Template","ModalPedidoComponent_h4_4_Template","ModalPedidoComponent_li_13_Template","ModalPedidoComponent_div_15_Template","ModalPedidoComponent_div_16_Template","PedidoService","PDFDocument","rgb","StandardFonts","PedidoComponent_div_12_Template_app_categoria_addClick_2_listener","addItem","categoria_r2","lista_de_items","PedidoComponent_tr_25_Template_button_click_4_listener","_r8","i_r6","ctx_r7","changeItemValue","PedidoComponent_tr_25_Template_button_click_8_listener","ctx_r9","item_r5","subtotal","modalService","carrinho","modalRef","open","componentInstance","gerarPDF","pdfDoc","create","page","addPage","font","embedFont","Helvetica","width","height","getSize","fontSize","text","drawText","x","y","size","color","pdfBytes","save","operation","updateTotal","splice","event","numeroRoupa","limparItens","requestRoupas","requestCategorias","cadastrarPedido","postPedido","NgbModal","PedidoComponent_Template","PedidoComponent_div_12_Template","PedidoComponent_tr_25_Template","PedidoComponent_Template_button_click_28_listener","PedidoComponent_Template_button_click_31_listener","object","post","carrinhos","Rf012Component_tr_35_Template_button_click_10_listener","order_r1","mudarEstado","ɵɵnamespaceSVG","ɵɵnamespaceHTML","number","date","deadline","ɵɵclassProp","recolhido","orders","order","Rf012Component_Template","Rf012Component_tr_35_Template","jsPDF","cliente_r8","RelatoriosComponent_div_48_table_1_tr_15_Template","clientes","cliente_r11","qtd","receita","RelatoriosComponent_div_48_table_2_tr_13_Template","ctx_r4","topClientes","row_r14","valorTotal","RelatoriosComponent_div_48_table_3_tr_11_Template","RelatoriosComponent_div_48_table_1_Template","RelatoriosComponent_div_48_table_2_Template","RelatoriosComponent_div_48_table_3_Template","mostrarListaClientes","mostrarListaTopClientes","mostrarReceita","relatorioService","dataInicio","dataFim","getTopCliente","gerarRelatorioClientesPDF","getCliente","getRelatorio","gerarRelatorioPDF","doc","default","startY","columns","setFontSize","column","rect","cliente","getTopClientes","dataVazia","gerarRelatorioReceita","_this5","getReceita","dateInput1","nativeElement","dateInput2","row","date1","Date","toLocaleDateString","timeZone","date2","RelatoriosService","RelatoriosComponent_Query","RelatoriosComponent_Template_button_click_17_listener","RelatoriosComponent_Template_button_click_26_listener","RelatoriosComponent_Template_input_ngModel_37_listener","RelatoriosComponent_Template_input_ngModel_41_listener","RelatoriosComponent_Template_button_click_43_listener","RelatoriosComponent_div_48_Template","data1","data2","baseUrl","baseFunction","body","type","checkUrl","getCurrentUrl","RequestResult","handleError","endsWith","concat","isAxiosError","_ref2","request","_x","apply","arguments","NG_VALIDATORS","MinimoValidatorDirective","valorMinimo","validate","c","firstValue","trim","v","isNaN","features","ɵɵProvidersFeature","provide","useExisting","multi","NG_VALUE_ACCESSOR","NumericoDirective","el","onInput","numericValue","onChange","registerOnChange","fn","registerOnTouched","onTouched","writeValue","ElementRef","hostBindings","NumericoDirective_HostBindings","ObrigatorioDirective","control","StringOnlyDirective","maxLength","newValue","StringOnlyDirective_HostBindings","Erro","timestamp","message","FormularioData","ajustarDataNasc","dia","slice","mes","ano","join","Pedido","Usuario","transform","args","parts","split","dateObject","dataFormatada","getDate","getMonth","getFullYear","pure","standalone","provideEnvironmentNgxMask","ngxEnviroment","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","providers","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}